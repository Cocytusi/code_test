/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "VRFCoordinatorV2Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFCoordinatorV2Interface__factory>;
    getContractFactory(
      name: "AccessControlEnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlEnumerableUpgradeable__factory>;
    getContractFactory(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControlEnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlEnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlUpgradeable__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC1822ProxiableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822ProxiableUpgradeable__factory>;
    getContractFactory(
      name: "IBeaconUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeaconUpgradeable__factory>;
    getContractFactory(
      name: "ERC1967UpgradeUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967UpgradeUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableUpgradeable__factory>;
    getContractFactory(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable__factory>;
    getContractFactory(
      name: "ERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Upgradeable__factory>;
    getContractFactory(
      name: "ERC1155BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155BurnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155MetadataURIUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Upgradeable__factory>;
    getContractFactory(
      name: "ERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Upgradeable__factory>;
    getContractFactory(
      name: "ERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PermitUpgradeable__factory>;
    getContractFactory(
      name: "IERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20PermitUpgradeable__factory>;
    getContractFactory(
      name: "ERC20CappedUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20CappedUpgradeable__factory>;
    getContractFactory(
      name: "IERC20MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Upgradeable__factory>;
    getContractFactory(
      name: "ERC721BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BurnableUpgradeable__factory>;
    getContractFactory(
      name: "ERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721EnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721EnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "EIP712Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Upgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "ERC20Capped",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Capped__factory>;
    getContractFactory(
      name: "ERC20Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Pausable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Burnable__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "MarketUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarketUpgradeable__factory>;
    getContractFactory(
      name: "AuctionConfigUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AuctionConfigUpgradeable__factory>;
    getContractFactory(
      name: "Constants",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Constants__factory>;
    getContractFactory(
      name: "IMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMarket__factory>;
    getContractFactory(
      name: "MarketContractWhitelistUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarketContractWhitelistUpgradeable__factory>;
    getContractFactory(
      name: "MarketCoreUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarketCoreUpgradeable__factory>;
    getContractFactory(
      name: "MarketFeeUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarketFeeUpgradeable__factory>;
    getContractFactory(
      name: "MarketFundDistributorUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarketFundDistributorUpgradeable__factory>;
    getContractFactory(
      name: "MarketRoyaltyUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarketRoyaltyUpgradeable__factory>;
    getContractFactory(
      name: "TreasuryNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TreasuryNode__factory>;
    getContractFactory(
      name: "TreasuryUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TreasuryUpgradeable__factory>;
    getContractFactory(
      name: "Cosmic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Cosmic__factory>;
    getContractFactory(
      name: "CosmicWizards3D",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicWizards3D__factory>;
    getContractFactory(
      name: "IFramedWizards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFramedWizards__factory>;
    getContractFactory(
      name: "FramedCosmicWizards2D",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FramedCosmicWizards2D__factory>;
    getContractFactory(
      name: "TestWizards2D",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestWizards2D__factory>;
    getContractFactory(
      name: "CosmicBadges",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicBadges__factory>;
    getContractFactory(
      name: "CosmicBundles",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicBundles__factory>;
    getContractFactory(
      name: "CosmicComponents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicComponents__factory>;
    getContractFactory(
      name: "CosmicPotions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicPotions__factory>;
    getContractFactory(
      name: "CosmicRawResources",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicRawResources__factory>;
    getContractFactory(
      name: "CosmicRefinedResources",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicRefinedResources__factory>;
    getContractFactory(
      name: "CosmicSkins",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicSkins__factory>;
    getContractFactory(
      name: "ERC1155AttributeStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155AttributeStorage__factory>;
    getContractFactory(
      name: "ERC1155Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Metadata__factory>;
    getContractFactory(
      name: "ERC1155Soulbound",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Soulbound__factory>;
    getContractFactory(
      name: "ERC1155Supply",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Supply__factory>;
    getContractFactory(
      name: "ERC1155URITokenJSON",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155URITokenJSON__factory>;
    getContractFactory(
      name: "ICosmicBundles",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICosmicBundles__factory>;
    getContractFactory(
      name: "IStandardERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStandardERC1155__factory>;
    getContractFactory(
      name: "CosmicUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicUpgradeable__factory>;
    getContractFactory(
      name: "ERC20BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20BurnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC20ExtendedUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20ExtendedUpgradeable__factory>;
    getContractFactory(
      name: "IlMagic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IlMagic__factory>;
    getContractFactory(
      name: "IMintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintable__factory>;
    getContractFactory(
      name: "LMagicUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LMagicUpgradeable__factory>;
    getContractFactory(
      name: "MagicUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MagicUpgradeable__factory>;
    getContractFactory(
      name: "XMagicUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XMagicUpgradeable__factory>;
    getContractFactory(
      name: "CosmicElves",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicElves__factory>;
    getContractFactory(
      name: "CosmicElvesTicketUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicElvesTicketUpgradeable__factory>;
    getContractFactory(
      name: "CosmicIslandLand",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicIslandLand__factory>;
    getContractFactory(
      name: "CosmicTools",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicTools__factory>;
    getContractFactory(
      name: "ICosmicTools",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICosmicTools__factory>;
    getContractFactory(
      name: "CosmicWizards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicWizards__factory>;
    getContractFactory(
      name: "CosmicAttributeStorageUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicAttributeStorageUpgradeable__factory>;
    getContractFactory(
      name: "ERC721BurnableExtendedUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BurnableExtendedUpgradeable__factory>;
    getContractFactory(
      name: "ERC721EnumerableExtendedUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721EnumerableExtendedUpgradeable__factory>;
    getContractFactory(
      name: "ERC721URIStorageExtendedUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorageExtendedUpgradeable__factory>;
    getContractFactory(
      name: "ERC721URITokenJSON",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URITokenJSON__factory>;
    getContractFactory(
      name: "FramedWizardsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FramedWizardsUpgradeable__factory>;
    getContractFactory(
      name: "ICosmicAttributeStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICosmicAttributeStorage__factory>;
    getContractFactory(
      name: "ICosmicElves",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICosmicElves__factory>;
    getContractFactory(
      name: "ICosmicElvesTicket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICosmicElvesTicket__factory>;
    getContractFactory(
      name: "ICosmicWizards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICosmicWizards__factory>;
    getContractFactory(
      name: "IStandardERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStandardERC721__factory>;
    getContractFactory(
      name: "AssetCustomizationUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetCustomizationUpgradeable__factory>;
    getContractFactory(
      name: "CosmicElvesMinter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CosmicElvesMinter__factory>;
    getContractFactory(
      name: "IProfessionStakingAvalanche",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProfessionStakingAvalanche__factory>;
    getContractFactory(
      name: "ProfessionStakingAvalanche",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProfessionStakingAvalanche__factory>;
    getContractFactory(
      name: "StakingRewardsClaimAvalanche",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakingRewardsClaimAvalanche__factory>;
    getContractFactory(
      name: "ElvenAdventures",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ElvenAdventures__factory>;
    getContractFactory(
      name: "IElvenAdventures",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IElvenAdventures__factory>;
    getContractFactory(
      name: "ProfessionStakingHarmony",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProfessionStakingHarmony__factory>;
    getContractFactory(
      name: "SimpleMasterInvestor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleMasterInvestor__factory>;
    getContractFactory(
      name: "GameStorageUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GameStorageUpgradeable__factory>;
    getContractFactory(
      name: "IGameStorageUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGameStorageUpgradeable__factory>;
    getContractFactory(
      name: "StandardAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StandardAccessControl__factory>;
    getContractFactory(
      name: "Blacklistable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Blacklistable__factory>;
    getContractFactory(
      name: "ChainlinkVRFConsumerUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkVRFConsumerUpgradeable__factory>;
    getContractFactory(
      name: "ContractConstants",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractConstants__factory>;
    getContractFactory(
      name: "ChainlinkVRFConsumerUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkVRFConsumerUpgradeable__factory>;
    getContractFactory(
      name: "ERC721QueryHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721QueryHelper__factory>;
    getContractFactory(
      name: "TokenConstants",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenConstants__factory>;
    getContractFactory(
      name: "UEQueryHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UEQueryHelper__factory>;
    getContractFactory(
      name: "VRFConsumerBaseV2Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFConsumerBaseV2Upgradeable__factory>;

    getContractAt(
      name: "VRFCoordinatorV2Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFCoordinatorV2Interface>;
    getContractAt(
      name: "AccessControlEnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlEnumerableUpgradeable>;
    getContractAt(
      name: "AccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlUpgradeable>;
    getContractAt(
      name: "IAccessControlEnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlEnumerableUpgradeable>;
    getContractAt(
      name: "IAccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlUpgradeable>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "IERC1822ProxiableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822ProxiableUpgradeable>;
    getContractAt(
      name: "IBeaconUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeaconUpgradeable>;
    getContractAt(
      name: "ERC1967UpgradeUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967UpgradeUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "PausableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableUpgradeable>;
    getContractAt(
      name: "ReentrancyGuardUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    getContractAt(
      name: "ERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Upgradeable>;
    getContractAt(
      name: "ERC1155BurnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155BurnableUpgradeable>;
    getContractAt(
      name: "IERC1155MetadataURIUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable>;
    getContractAt(
      name: "IERC1155ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155ReceiverUpgradeable>;
    getContractAt(
      name: "IERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Upgradeable>;
    getContractAt(
      name: "ERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Upgradeable>;
    getContractAt(
      name: "ERC20PermitUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PermitUpgradeable>;
    getContractAt(
      name: "IERC20PermitUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20PermitUpgradeable>;
    getContractAt(
      name: "ERC20CappedUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20CappedUpgradeable>;
    getContractAt(
      name: "IERC20MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20MetadataUpgradeable>;
    getContractAt(
      name: "IERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Upgradeable>;
    getContractAt(
      name: "ERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Upgradeable>;
    getContractAt(
      name: "ERC721BurnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BurnableUpgradeable>;
    getContractAt(
      name: "ERC721EnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721EnumerableUpgradeable>;
    getContractAt(
      name: "IERC721EnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721EnumerableUpgradeable>;
    getContractAt(
      name: "IERC721MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "EIP712Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Upgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "ERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "ERC20Capped",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Capped>;
    getContractAt(
      name: "ERC20Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Pausable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Burnable>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "ERC721URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "MarketUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarketUpgradeable>;
    getContractAt(
      name: "AuctionConfigUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AuctionConfigUpgradeable>;
    getContractAt(
      name: "Constants",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Constants>;
    getContractAt(
      name: "IMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMarket>;
    getContractAt(
      name: "MarketContractWhitelistUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarketContractWhitelistUpgradeable>;
    getContractAt(
      name: "MarketCoreUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarketCoreUpgradeable>;
    getContractAt(
      name: "MarketFeeUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarketFeeUpgradeable>;
    getContractAt(
      name: "MarketFundDistributorUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarketFundDistributorUpgradeable>;
    getContractAt(
      name: "MarketRoyaltyUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarketRoyaltyUpgradeable>;
    getContractAt(
      name: "TreasuryNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TreasuryNode>;
    getContractAt(
      name: "TreasuryUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TreasuryUpgradeable>;
    getContractAt(
      name: "Cosmic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Cosmic>;
    getContractAt(
      name: "CosmicWizards3D",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicWizards3D>;
    getContractAt(
      name: "IFramedWizards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFramedWizards>;
    getContractAt(
      name: "FramedCosmicWizards2D",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FramedCosmicWizards2D>;
    getContractAt(
      name: "TestWizards2D",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestWizards2D>;
    getContractAt(
      name: "CosmicBadges",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicBadges>;
    getContractAt(
      name: "CosmicBundles",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicBundles>;
    getContractAt(
      name: "CosmicComponents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicComponents>;
    getContractAt(
      name: "CosmicPotions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicPotions>;
    getContractAt(
      name: "CosmicRawResources",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicRawResources>;
    getContractAt(
      name: "CosmicRefinedResources",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicRefinedResources>;
    getContractAt(
      name: "CosmicSkins",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicSkins>;
    getContractAt(
      name: "ERC1155AttributeStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155AttributeStorage>;
    getContractAt(
      name: "ERC1155Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Metadata>;
    getContractAt(
      name: "ERC1155Soulbound",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Soulbound>;
    getContractAt(
      name: "ERC1155Supply",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Supply>;
    getContractAt(
      name: "ERC1155URITokenJSON",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155URITokenJSON>;
    getContractAt(
      name: "ICosmicBundles",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICosmicBundles>;
    getContractAt(
      name: "IStandardERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStandardERC1155>;
    getContractAt(
      name: "CosmicUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicUpgradeable>;
    getContractAt(
      name: "ERC20BurnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20BurnableUpgradeable>;
    getContractAt(
      name: "IERC20ExtendedUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20ExtendedUpgradeable>;
    getContractAt(
      name: "IlMagic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IlMagic>;
    getContractAt(
      name: "IMintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintable>;
    getContractAt(
      name: "LMagicUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LMagicUpgradeable>;
    getContractAt(
      name: "MagicUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MagicUpgradeable>;
    getContractAt(
      name: "XMagicUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.XMagicUpgradeable>;
    getContractAt(
      name: "CosmicElves",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicElves>;
    getContractAt(
      name: "CosmicElvesTicketUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicElvesTicketUpgradeable>;
    getContractAt(
      name: "CosmicIslandLand",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicIslandLand>;
    getContractAt(
      name: "CosmicTools",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicTools>;
    getContractAt(
      name: "ICosmicTools",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICosmicTools>;
    getContractAt(
      name: "CosmicWizards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicWizards>;
    getContractAt(
      name: "CosmicAttributeStorageUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicAttributeStorageUpgradeable>;
    getContractAt(
      name: "ERC721BurnableExtendedUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BurnableExtendedUpgradeable>;
    getContractAt(
      name: "ERC721EnumerableExtendedUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721EnumerableExtendedUpgradeable>;
    getContractAt(
      name: "ERC721URIStorageExtendedUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorageExtendedUpgradeable>;
    getContractAt(
      name: "ERC721URITokenJSON",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URITokenJSON>;
    getContractAt(
      name: "FramedWizardsUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FramedWizardsUpgradeable>;
    getContractAt(
      name: "ICosmicAttributeStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICosmicAttributeStorage>;
    getContractAt(
      name: "ICosmicElves",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICosmicElves>;
    getContractAt(
      name: "ICosmicElvesTicket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICosmicElvesTicket>;
    getContractAt(
      name: "ICosmicWizards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICosmicWizards>;
    getContractAt(
      name: "IStandardERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStandardERC721>;
    getContractAt(
      name: "AssetCustomizationUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssetCustomizationUpgradeable>;
    getContractAt(
      name: "CosmicElvesMinter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CosmicElvesMinter>;
    getContractAt(
      name: "IProfessionStakingAvalanche",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProfessionStakingAvalanche>;
    getContractAt(
      name: "ProfessionStakingAvalanche",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProfessionStakingAvalanche>;
    getContractAt(
      name: "StakingRewardsClaimAvalanche",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakingRewardsClaimAvalanche>;
    getContractAt(
      name: "ElvenAdventures",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ElvenAdventures>;
    getContractAt(
      name: "IElvenAdventures",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IElvenAdventures>;
    getContractAt(
      name: "ProfessionStakingHarmony",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProfessionStakingHarmony>;
    getContractAt(
      name: "SimpleMasterInvestor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleMasterInvestor>;
    getContractAt(
      name: "GameStorageUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GameStorageUpgradeable>;
    getContractAt(
      name: "IGameStorageUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGameStorageUpgradeable>;
    getContractAt(
      name: "StandardAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StandardAccessControl>;
    getContractAt(
      name: "Blacklistable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Blacklistable>;
    getContractAt(
      name: "ChainlinkVRFConsumerUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkVRFConsumerUpgradeable>;
    getContractAt(
      name: "ContractConstants",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractConstants>;
    getContractAt(
      name: "ChainlinkVRFConsumerUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkVRFConsumerUpgradeable>;
    getContractAt(
      name: "ERC721QueryHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721QueryHelper>;
    getContractAt(
      name: "TokenConstants",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenConstants>;
    getContractAt(
      name: "UEQueryHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UEQueryHelper>;
    getContractAt(
      name: "VRFConsumerBaseV2Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFConsumerBaseV2Upgradeable>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
