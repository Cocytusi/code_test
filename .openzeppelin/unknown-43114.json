{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x918eA0E87ef08a5931aD3777b8c0EB69e2Ce37Dd",
    "txHash": "0x3252f3edddd6c7d9d68437fd9803237e357b9d480bbd15660132fc3b5729ec90"
  },
  "proxies": [
    {
      "address": "0xD6E52355D5901C013f3b8F055582B3360EBE1a65",
      "txHash": "0x430cc310fd03792477e9e48c6325afee196a9039a11d581bfb00ba74b6c23aee",
      "kind": "transparent"
    },
    {
      "address": "0xe48C74833ce6f18A8e54f73f1D02B8E9f9Ff8Caa",
      "txHash": "0x5e23a843aa5e5dacbc61567d9ce03a60ab070ab702f2e9fc99007c32a46ef47e",
      "kind": "transparent"
    },
    {
      "address": "0x9A8E0217cD870783c3f2317985C57Bf570969153",
      "txHash": "0x9d3843969998fe777aa0cb0181d259e80c0d45bd23aed5d0f769138f8aeae139",
      "kind": "transparent"
    },
    {
      "address": "0x6bAbF453428227D38A4025fD0d5952cEFc350CAE",
      "txHash": "0x2f1b4d36952dce73f369314ab99483d6891c88f34f40a07eb97373b9b86a09d4",
      "kind": "transparent"
    },
    {
      "address": "0xBF20c23D25Fca8Aa4e7946496250D67872691Af2",
      "txHash": "0xe1bc656b4e3d3a94e092c4647370bff39f5a5184bf958cac22e671357eb70006",
      "kind": "transparent"
    },
    {
      "address": "0xc9d61e23E27A3b75B8fEf4b66a67bFC5737e6262",
      "txHash": "0x94406c2bf31e35b8a5a294b5d3c5b7b7c54d997ce831badb3d87097e32f6c038",
      "kind": "transparent"
    },
    {
      "address": "0x8a990BFE725c490CCaCFC94Ff99E835400dEEA6d",
      "txHash": "0x732ea6dbac9d112868e6ff27ac53faba148dbc84d927b96ed8d932faecb71f87",
      "kind": "transparent"
    },
    {
      "address": "0x3a55FFC97D2183d94147c4D2d3b6991f0C09ABf4",
      "txHash": "0xaba94a6526ab80d85bed8657b2fd00ca401e1b1ed5cd75225c1492275baca6de",
      "kind": "transparent"
    },
    {
      "address": "0x437874Ddf0d0f721CE98ecdDE69E740bb357e8e0",
      "txHash": "0x68d900d4a72c94e63971a024ad74eca9b5051e99720af8177d71e3de1d7d7b3c",
      "kind": "transparent"
    },
    {
      "address": "0xf7Faa28f8934D3dcAf571ef3dd0A41BD5604915C",
      "txHash": "0x958649a16d70b5d12b8bf6473186535266836f6f3244455f914fd4bff38e1c5b",
      "kind": "transparent"
    },
    {
      "address": "0x2fa83f2Fa89F275863B9491b1802dFeA5A130024",
      "txHash": "0x3c34b00f3ca3ad17909e9631f2a553e8902d792e7dcf07d993ee18ca66fa673b",
      "kind": "transparent"
    },
    {
      "address": "0x87D0F9ff4B51EEfe9f5f1578bc35e4ddA28bBd1e",
      "txHash": "0x0b9a111616c4784976df52ccade546d8c1753895a7c7aeffe2ae2e9beb839dbb",
      "kind": "transparent"
    },
    {
      "address": "0x8EebaCaBD19B84AAe85821e9ffa5452b096e769D",
      "txHash": "0xb530b44982a26eac87e000f82c9c7277e354127cb952c423944d86302d27015e",
      "kind": "transparent"
    },
    {
      "address": "0xfA6b0948bbdd390D7739D77D824eBAc3bbf2d07e",
      "txHash": "0xf9afcb318e934aff1d2e9f64cfddf00b92a9b0fc7abed5855c6f8c4f4d016cb7",
      "kind": "transparent"
    },
    {
      "address": "0x71e9e186DcFb6fd1BA018DF46d21e7aA10969aD1",
      "txHash": "0x07792c0547314a9bf0c2406933585acfde096ce2e77dc20f963ba1c43ac4f760",
      "kind": "transparent"
    },
    {
      "address": "0x5202e45EbA7F58E350AA58B59dEB64a668654007",
      "txHash": "0x6b2b9b487ca2aa76c6274114a38246cd29ed30886a71efda5e7f4a4657d78dac",
      "kind": "transparent"
    }
  ],
  "impls": {
    "b7b42cab70ac4e4708cb4cfba83ee26ab18c13d07c1a1034ca60684452dfdffb": {
      "address": "0x10c43C1947d08e6fE69cAaC1730F8863a4Ddaa69",
      "txHash": "0xc6187622fa0812e0c9a512435f1db15bc521c02a191a353b7d0d90fb63a56a1f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:247"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)3522_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "_totalBurned",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "ERC20BurnableUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\extensions\\ERC20BurnableUpgradeable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\extensions\\ERC20BurnableUpgradeable.sol:59"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)3522_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3522_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "82202fe6f98afe4f87888061f258579951aebdbebc735132fee376eefa7e0dea": {
      "address": "0xdb4b0b6298e795ee7c262dd9A9E1a6e3C6F0084A",
      "txHash": "0x65e7e2e277cb17b900ee359c53feb9d755111b749a55a8cf731a466667ba480d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:247"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)1984_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "_totalBurned",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "ERC20BurnableUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\extensions\\ERC20BurnableUpgradeable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\extensions\\ERC20BurnableUpgradeable.sol:59"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)1984_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1984_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "545425fa485a313d25f09339b42f1b014961e5c52feb1df1eaece81a81ac341b": {
      "address": "0x27F9361FCC7dc5aA6a2b31b4C5833CAcc0357AFb",
      "txHash": "0x4caa7c56fa9148b271e5a5d32c41ae7384f227ac3a7ff14a441bac05424c4cb4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:247"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)7759_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_saleIdCounter",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(Counter)5522_storage",
            "contract": "MarketCounterUpgradable",
            "src": "contracts\\marketplace\\mixins\\MarketCounterUpgradable.sol:9"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketCounterUpgradable",
            "src": "contracts\\marketplace\\mixins\\MarketCounterUpgradable.sol:17"
          },
          {
            "label": "contractAddressToBidToken",
            "offset": 0,
            "slot": "1252",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MarketContractWhitelistUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketContractWhitelistUpgradeable.sol:13"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1253",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketContractWhitelistUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketContractWhitelistUpgradeable.sol:43"
          },
          {
            "label": "_maxRoyaltyBps",
            "offset": 0,
            "slot": "2253",
            "type": "t_uint256",
            "contract": "MarketRoyaltyUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketRoyaltyUpgradeable.sol:18"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "2254",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(RoyaltyInfo)10757_storage))",
            "contract": "MarketRoyaltyUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketRoyaltyUpgradeable.sol:19"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "2255",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketRoyaltyUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketRoyaltyUpgradeable.sol:63"
          },
          {
            "label": "_marketFeeBps",
            "offset": 0,
            "slot": "3255",
            "type": "t_uint256",
            "contract": "MarketFeeUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketFeeUpgradeable.sol:13"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "3256",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketFeeUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketFeeUpgradeable.sol:41"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "4256",
            "type": "t_address",
            "contract": "TreasuryNode",
            "src": "contracts\\marketplace\\mixins\\TreasuryNode.sol:10"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4257",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "TreasuryNode",
            "src": "contracts\\marketplace\\mixins\\TreasuryNode.sol:21"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "5257",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketFundDistributorUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketFundDistributorUpgradeable.sol:45"
          },
          {
            "label": "_nexBidPercentBps",
            "offset": 0,
            "slot": "6257",
            "type": "t_uint256",
            "contract": "AuctionConfigUpgradeable",
            "src": "contracts\\marketplace\\mixins\\AuctionConfigUpgradeable.sol:15"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "6258",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "AuctionConfigUpgradeable",
            "src": "contracts\\marketplace\\mixins\\AuctionConfigUpgradeable.sol:47"
          },
          {
            "label": "saleIdToSale",
            "offset": 0,
            "slot": "7258",
            "type": "t_mapping(t_uint256,t_struct(Sale)9080_storage)",
            "contract": "MarketCoreUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketCoreUpgradeable.sol:64"
          },
          {
            "label": "_activeSaleIds",
            "offset": 0,
            "slot": "7259",
            "type": "t_struct(UintSet)7916_storage",
            "contract": "MarketCoreUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketCoreUpgradeable.sol:66"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "7261",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketCoreUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketCoreUpgradeable.sol:421"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]",
            "numberOfBytes": "32000"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(SaleType)9046": {
            "label": "enum MarketCoreUpgradeable.SaleType",
            "members": [
              "AUCTION",
              "FIXED",
              "OFFER"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TokenType)9049": {
            "label": "enum MarketCoreUpgradeable.TokenType",
            "members": [
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(RoyaltyInfo)10757_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MarketRoyaltyUpgradeable.RoyaltyInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)7759_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)10757_storage)": {
            "label": "mapping(uint256 => struct MarketRoyaltyUpgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Sale)9080_storage)": {
            "label": "mapping(uint256 => struct MarketCoreUpgradeable.Sale)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)7759_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7458_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)5522_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)10757_storage": {
            "label": "struct MarketRoyaltyUpgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Sale)9080_storage": {
            "label": "struct MarketCoreUpgradeable.Sale",
            "members": [
              {
                "label": "saleType",
                "type": "t_enum(SaleType)9046",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenType",
                "type": "t_enum(TokenType)9049",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "bidToken",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "bidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Set)7458_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)7916_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7458_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a221f563ab8b71f9fc17604154adec7842271b7c3385874eb80774b33b79bd91": {
      "address": "0xBe8DF35ecC0177bC06A360A876a76436B8C62567",
      "txHash": "0xc759cc847eb20f3e2ed56f76026651559bb70aa2640a2a16b106ed6c026e88f7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8266_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_saleIdCounter",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(Counter)5613_storage",
            "contract": "MarketCounterUpgradable",
            "src": "contracts\\marketplace\\mixins\\MarketCounterUpgradable.sol:9"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketCounterUpgradable",
            "src": "contracts\\marketplace\\mixins\\MarketCounterUpgradable.sol:17"
          },
          {
            "label": "contractAddressToBidToken",
            "offset": 0,
            "slot": "1252",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MarketContractWhitelistUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketContractWhitelistUpgradeable.sol:13"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1253",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketContractWhitelistUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketContractWhitelistUpgradeable.sol:43"
          },
          {
            "label": "_maxRoyaltyBps",
            "offset": 0,
            "slot": "2253",
            "type": "t_uint256",
            "contract": "MarketRoyaltyUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketRoyaltyUpgradeable.sol:18"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "2254",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(RoyaltyInfo)11264_storage))",
            "contract": "MarketRoyaltyUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketRoyaltyUpgradeable.sol:19"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "2255",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketRoyaltyUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketRoyaltyUpgradeable.sol:63"
          },
          {
            "label": "_marketFeeBps",
            "offset": 0,
            "slot": "3255",
            "type": "t_uint256",
            "contract": "MarketFeeUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketFeeUpgradeable.sol:13"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "3256",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketFeeUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketFeeUpgradeable.sol:41"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "4256",
            "type": "t_address",
            "contract": "TreasuryNode",
            "src": "contracts\\marketplace\\mixins\\TreasuryNode.sol:10"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4257",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "TreasuryNode",
            "src": "contracts\\marketplace\\mixins\\TreasuryNode.sol:21"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "5257",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketFundDistributorUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketFundDistributorUpgradeable.sol:45"
          },
          {
            "label": "_nexBidPercentBps",
            "offset": 0,
            "slot": "6257",
            "type": "t_uint256",
            "contract": "AuctionConfigUpgradeable",
            "src": "contracts\\marketplace\\mixins\\AuctionConfigUpgradeable.sol:15"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "6258",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "AuctionConfigUpgradeable",
            "src": "contracts\\marketplace\\mixins\\AuctionConfigUpgradeable.sol:47"
          },
          {
            "label": "saleIdToSale",
            "offset": 0,
            "slot": "7258",
            "type": "t_mapping(t_uint256,t_struct(Sale)9587_storage)",
            "contract": "MarketCoreUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketCoreUpgradeable.sol:64"
          },
          {
            "label": "_activeSaleIds",
            "offset": 0,
            "slot": "7259",
            "type": "t_struct(UintSet)8423_storage",
            "contract": "MarketCoreUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketCoreUpgradeable.sol:66"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "7261",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketCoreUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketCoreUpgradeable.sol:421"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]",
            "numberOfBytes": "32000"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(SaleType)9553": {
            "label": "enum MarketCoreUpgradeable.SaleType",
            "members": [
              "AUCTION",
              "FIXED",
              "OFFER"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TokenType)9556": {
            "label": "enum MarketCoreUpgradeable.TokenType",
            "members": [
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(RoyaltyInfo)11264_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MarketRoyaltyUpgradeable.RoyaltyInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8266_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)11264_storage)": {
            "label": "mapping(uint256 => struct MarketRoyaltyUpgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Sale)9587_storage)": {
            "label": "mapping(uint256 => struct MarketCoreUpgradeable.Sale)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8266_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7965_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)5613_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)11264_storage": {
            "label": "struct MarketRoyaltyUpgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Sale)9587_storage": {
            "label": "struct MarketCoreUpgradeable.Sale",
            "members": [
              {
                "label": "saleType",
                "type": "t_enum(SaleType)9553",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenType",
                "type": "t_enum(TokenType)9556",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "bidToken",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "bidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Set)7965_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8423_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7965_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d9f90109c5dfbab9a3e4863975e30cdb810b1e9c0c923b7dfa9334febdf31834": {
      "address": "0xDF2F72B1C3077EfB4F829a9dd5937A92263f6AFA",
      "txHash": "0x1f4681385153d3cc38b89a11f1c235e4f21fa65a47d3a4c3075d1d0f7b082cc8",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:53"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3278_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)3435_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)3278_storage",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3278_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3278_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2977_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2977_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3435_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2977_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b01c29aae737e55aec219f98d72e15b67a36d9bc9a1c88c8d5122284cb4f143c": {
      "address": "0x53d0BbAe3860Af8AE53EF4DF74bf95e15b674137",
      "txHash": "0x79e4f2902a39c75d4b66d299d02ab76dfba6bfc6491ba8ab4b4c04c0a5c938e2",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "GOV_TOKEN",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20ExtendedUpgradeable)11947",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:54"
          },
          {
            "label": "DEV_FUND_ADDRESS",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:56"
          },
          {
            "label": "FEE_SHARE_FUND_ADDRESS",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:58"
          },
          {
            "label": "MARKETING_FUND_ADDRESS",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:60"
          },
          {
            "label": "FOUNDERS_FUND_ADDRESS",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:62"
          },
          {
            "label": "REWARD_PER_SECOND",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:64"
          },
          {
            "label": "USER_FEE_STAGES",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:66"
          },
          {
            "label": "DEV_FEE_STAGES",
            "offset": 0,
            "slot": "208",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:67"
          },
          {
            "label": "USER_DEP_FEE",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:68"
          },
          {
            "label": "DEV_DEP_FEE",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:69"
          },
          {
            "label": "START_TIME",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:72"
          },
          {
            "label": "TOTAL_ALLOCATION_POINTS",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:74"
          },
          {
            "label": "PERCENT_FOR_DEV",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:76"
          },
          {
            "label": "PERCENT_FOR_FEE_SHARE",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:77"
          },
          {
            "label": "PERCENT_FOR_MARKETING",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:78"
          },
          {
            "label": "PERCENT_FOR_FOUNDERS",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:79"
          },
          {
            "label": "poolInfo",
            "offset": 0,
            "slot": "217",
            "type": "t_array(t_struct(PoolInfo)18008_storage)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:82"
          },
          {
            "label": "poolId",
            "offset": 0,
            "slot": "218",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:83"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "219",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)17998_storage))",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:84"
          },
          {
            "label": "poolExistence",
            "offset": 0,
            "slot": "220",
            "type": "t_mapping(t_contract(IERC20ExtendedUpgradeable)11947,t_bool)",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(PoolInfo)18008_storage)dyn_storage": {
            "label": "struct SimpleMasterInvestor.PoolInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20ExtendedUpgradeable)11947": {
            "label": "contract IERC20ExtendedUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)17998_storage)": {
            "label": "mapping(address => struct SimpleMasterInvestor.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20ExtendedUpgradeable)11947,t_bool)": {
            "label": "mapping(contract IERC20ExtendedUpgradeable => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)17998_storage))": {
            "label": "mapping(uint256 => mapping(address => struct SimpleMasterInvestor.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)18008_storage": {
            "label": "struct SimpleMasterInvestor.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IERC20ExtendedUpgradeable)11947",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRewardTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accGovTokenPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)17998_storage": {
            "label": "struct SimpleMasterInvestor.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardDebtAtTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastWithdrawTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "firstDepositTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "timeDelta",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastDepositTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0a0d912c2289019a95f9d3227fc9a1928560927d95da88ff35b1e24d3aa56e99": {
      "address": "0x5473518399A6f641cE6099582095eA42a9579471",
      "txHash": "0x60b689b1b7dfd67e94a762ad47a5dbc53856a8a065ed73512b171859c1085ff6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "BASE_TOKEN",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(ERC20Upgradeable)3174",
            "contract": "xMagicUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\xMagicUpgradeable.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ERC20Upgradeable)3174": {
            "label": "contract ERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1ce088705e3074261f4514c142827afa287ebaa7de6b9e12b4a53773eb7c243d": {
      "address": "0x1AFB0D8f24006097feF30544e8b27D325d7528Da",
      "txHash": "0x32d3160cb2fe12ef32ffc7bccf552586c6ca65279a90b4f62afab195f95c43a5",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_store",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))))",
            "contract": "GameStorageUpgradeable",
            "src": "contracts\\upgradeable\\storage\\GameStorageUpgradeable.sol:19"
          },
          {
            "label": "_textStore",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage)))",
            "contract": "GameStorageUpgradeable",
            "src": "contracts\\upgradeable\\storage\\GameStorageUpgradeable.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => string)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c7236c5e3833eda384f4178c62ece091b4360d50ce39eeca61222407a88df01f": {
      "address": "0x9a06a38847A19d6Fa96Ef24f5543f13bf0C80f64",
      "txHash": "0x288bbfb1557cbc48e3bed63e0d26ae6cda7f158e6c26d85b81624cfcbf55c15f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "GAME_STORAGE",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IGameStorageUpgradeable)20191",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:25"
          },
          {
            "label": "_training_status",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(TrainingStatus)14550_storage)))",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:72"
          },
          {
            "label": "_training_config",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_struct(TrainingLevelConfig)14535_storage)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:74"
          },
          {
            "label": "_data",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_struct(ParticipantData)14512_storage)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:76"
          },
          {
            "label": "_dataKeys",
            "offset": 0,
            "slot": "205",
            "type": "t_struct(AddressSet)8266_storage",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:78"
          },
          {
            "label": "_config",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_struct(StakingConfig)14525_storage)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:80"
          },
          {
            "label": "_game_storage_staking_skill_pointer",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_struct(StakingEnabledPointer)14530_storage)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:82"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NFT)14500_storage)dyn_storage": {
            "label": "struct ProfessionStakingUpgradeable.NFT[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IGameStorageUpgradeable)20191": {
            "label": "contract IGameStorageUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(TrainingStatus)14550_storage)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingStatus)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(TrainingStatus)14550_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ParticipantData)14512_storage)": {
            "label": "mapping(address => struct ProfessionStakingUpgradeable.ParticipantData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StakingConfig)14525_storage)": {
            "label": "mapping(address => struct ProfessionStakingUpgradeable.StakingConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StakingEnabledPointer)14530_storage)": {
            "label": "mapping(address => struct ProfessionStakingUpgradeable.StakingEnabledPointer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TrainingLevelConfig)14535_storage)": {
            "label": "mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingLevelConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TrainingStatus)14550_storage)": {
            "label": "mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8266_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7965_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(NFT)14500_storage": {
            "label": "struct ProfessionStakingUpgradeable.NFT",
            "members": [
              {
                "label": "_address",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ParticipantData)14512_storage": {
            "label": "struct ProfessionStakingUpgradeable.ParticipantData",
            "members": [
              {
                "label": "nfts",
                "type": "t_array(t_struct(NFT)14500_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)7965_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingConfig)14525_storage": {
            "label": "struct ProfessionStakingUpgradeable.StakingConfig",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxPointsPerSkill",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "treeIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "skillIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardToken",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(StakingEnabledPointer)14530_storage": {
            "label": "struct ProfessionStakingUpgradeable.StakingEnabledPointer",
            "members": [
              {
                "label": "treeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "skillId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TrainingLevelConfig)14535_storage": {
            "label": "struct ProfessionStakingUpgradeable.TrainingLevelConfig",
            "members": [
              {
                "label": "cost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TrainingStatus)14550_storage": {
            "label": "struct ProfessionStakingUpgradeable.TrainingStatus",
            "members": [
              {
                "label": "_address",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "treeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "skillId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "completeAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "71c4e9bf4ec6c1a6ada161921243de5fdf650879d0ecd344ef70376f6fbf77a3": {
      "address": "0xB418BEe6639c4a378c28aBAd4f6Af1F16827f3cC",
      "txHash": "0x9e639133fa7ea86ff6433003daaf6eef3383c4b8a7b571e20a693f03e5bfff14",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:57"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "FramedWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\FramedWizardsUpgradeable.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9073b7b283e34955b0a5ad1cf293f60862fc40320455af04c7c07b388eb06800": {
      "address": "0x11e9ADBc54745E732438B360e9e282944540374d",
      "txHash": "0x4bb70e9b4944f06af4caef909cb4ecb9c6da07365196e4816c1605498442b7cc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:53"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b6ec06c2dc525165970183e576a2c5507a16f67f96cd75f74ce03907ee3e6677": {
      "address": "0xa29E1B0B86ae26BD9700Ad8833785b4a34f0a1C0",
      "txHash": "0x4dc7dc813a717a84858ae19b202724addf3050a3547adfdac827f135ddf95c20",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "GOV_TOKEN",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20ExtendedUpgradeable)1610",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:54"
          },
          {
            "label": "DEV_FUND_ADDRESS",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:56"
          },
          {
            "label": "FEE_SHARE_FUND_ADDRESS",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:58"
          },
          {
            "label": "MARKETING_FUND_ADDRESS",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:60"
          },
          {
            "label": "FOUNDERS_FUND_ADDRESS",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:62"
          },
          {
            "label": "REWARD_PER_SECOND",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:64"
          },
          {
            "label": "USER_FEE_STAGES",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:66"
          },
          {
            "label": "DEV_FEE_STAGES",
            "offset": 0,
            "slot": "208",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:67"
          },
          {
            "label": "USER_DEP_FEE",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:68"
          },
          {
            "label": "DEV_DEP_FEE",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:69"
          },
          {
            "label": "START_TIME",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:72"
          },
          {
            "label": "TOTAL_ALLOCATION_POINTS",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:74"
          },
          {
            "label": "PERCENT_FOR_DEV",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:76"
          },
          {
            "label": "PERCENT_FOR_FEE_SHARE",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:77"
          },
          {
            "label": "PERCENT_FOR_MARKETING",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:78"
          },
          {
            "label": "PERCENT_FOR_FOUNDERS",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:79"
          },
          {
            "label": "poolInfo",
            "offset": 0,
            "slot": "217",
            "type": "t_array(t_struct(PoolInfo)1662_storage)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:82"
          },
          {
            "label": "poolId",
            "offset": 0,
            "slot": "218",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:83"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "219",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1652_storage))",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:84"
          },
          {
            "label": "poolExistence",
            "offset": 0,
            "slot": "220",
            "type": "t_mapping(t_contract(IERC20ExtendedUpgradeable)1610,t_bool)",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(PoolInfo)1662_storage)dyn_storage": {
            "label": "struct SimpleMasterInvestor.PoolInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20ExtendedUpgradeable)1610": {
            "label": "contract IERC20ExtendedUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)1652_storage)": {
            "label": "mapping(address => struct SimpleMasterInvestor.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20ExtendedUpgradeable)1610,t_bool)": {
            "label": "mapping(contract IERC20ExtendedUpgradeable => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1652_storage))": {
            "label": "mapping(uint256 => mapping(address => struct SimpleMasterInvestor.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)1662_storage": {
            "label": "struct SimpleMasterInvestor.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IERC20ExtendedUpgradeable)1610",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRewardTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accGovTokenPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)1652_storage": {
            "label": "struct SimpleMasterInvestor.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardDebtAtTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastWithdrawTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "firstDepositTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "timeDelta",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastDepositTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5378571e15f8d19e47a4d9188085f02632047536839e7b39f976212e3af0e8bb": {
      "address": "0xc9F07aAc770f7E8951819b8cB1ea25A333ddAfee",
      "txHash": "0x36e89c4b39a48033f53ff355d179b27b087c197c4f0b234636f022d947978465",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "vrfCoordinator",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:101"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "50",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "100",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "150",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "200",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "250",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "300",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "350",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "450",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "500",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "551",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_coordinator",
            "offset": 0,
            "slot": "600",
            "type": "t_contract(VRFCoordinatorV2Interface)88",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:14"
          },
          {
            "label": "_keyHash",
            "offset": 0,
            "slot": "601",
            "type": "t_bytes32",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:16"
          },
          {
            "label": "_subscriptionId",
            "offset": 0,
            "slot": "602",
            "type": "t_uint64",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:17"
          },
          {
            "label": "_confirmations",
            "offset": 8,
            "slot": "602",
            "type": "t_uint16",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:50"
          },
          {
            "label": "_pending",
            "offset": 0,
            "slot": "649",
            "type": "t_mapping(t_address,t_struct(PendingMint)12304_storage)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:36"
          },
          {
            "label": "_requestIdToAddress",
            "offset": 0,
            "slot": "650",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:37"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "651",
            "type": "t_struct(Counter)5702_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:39"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "652",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:41"
          },
          {
            "label": "percent5",
            "offset": 0,
            "slot": "654",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:43"
          },
          {
            "label": "percent10",
            "offset": 0,
            "slot": "656",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:44"
          },
          {
            "label": "percent15",
            "offset": 0,
            "slot": "658",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:45"
          },
          {
            "label": "percent20",
            "offset": 0,
            "slot": "660",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:46"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "662",
            "type": "t_contract(IERC20Upgradeable)3252",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:48"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "663",
            "type": "t_address",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:50"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "664",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:52"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "665",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:53"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "666",
            "type": "t_string_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)3252": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)88": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingMint)12304_storage)": {
            "label": "mapping(address => struct CosmicElvesTicketUpgradeable.PendingMint)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)5702_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PendingMint)12304_storage": {
            "label": "struct CosmicElvesTicketUpgradeable.PendingMint",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "words",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9840902a19361eb910db178e7adb3acb6cdbe2481c2234ed4ca92eb4b67a8fc3": {
      "address": "0xAB7b64a127B8796D183a6d8a236365C8Ce75BADC",
      "txHash": "0x136be7879d3fa0cc5d5afc76f477b7b9345eb88a137018e81f8900ea9f5544b4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:53"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3278_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)3435_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)3278_storage",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:24"
          },
          {
            "label": "_numericAttributes",
            "offset": 0,
            "slot": "603",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3278_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3278_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2977_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2977_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3435_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2977_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "25490297215fe36a21859b5cc0847ccf9110b64b8a9a93e0da35303393565ff9": {
      "address": "0xF0ACbE84d5f0f1ADf3b7f88b868396643BcA4114",
      "txHash": "0x5792916d8e4d02ee277013b93174c3bf5e7c651afbe74d0fdd1363ae13d78137",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:53"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3278_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)3435_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)3278_storage",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:24"
          },
          {
            "label": "_numericAttributes",
            "offset": 0,
            "slot": "603",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3278_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3278_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2977_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2977_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3435_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2977_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1eb4b6fb295e3a50b459186a3bafb4c02a7e89c9400532e7eeff13a0d494235a": {
      "address": "0x3Bbd69E24226307eaf81F89250A9291cF997951A",
      "txHash": "0x413ce03ae065b179e7ca21b40974043126e498fee650ad72f005524abbc32413",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:53"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3278_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)3435_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)3278_storage",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:24"
          },
          {
            "label": "_numericAttributes",
            "offset": 0,
            "slot": "603",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3278_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3278_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2977_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2977_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3435_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2977_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "32678f6ffbd5ffeed49539dd4ca6999bd8340274bfcaa8067eba40078737ad7b": {
      "address": "0xfA2085fC88c59db02902F75D4fe52E7442950866",
      "txHash": "0x5f9a7f1e1a025a1737dc87a3ad1381d21696e326aa69cd819f7d4739974f2687",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:53"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3278_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)3435_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)3278_storage",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:24"
          },
          {
            "label": "_numericAttributes",
            "offset": 0,
            "slot": "603",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3278_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3278_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2977_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2977_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3435_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2977_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d8c294231916e9e21e28d191595a57425aba02da60c28f93f3b26484475833e7": {
      "address": "0x73696b3678698cB580D20E8133cdE271b354059e",
      "txHash": "0xf2eda908d35185f4e0c17714268089c915a6a22e02fe2a2865445fe869e68f61",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:53"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:24"
          },
          {
            "label": "_numericAttributes",
            "offset": 0,
            "slot": "603",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "97ec901bbb4303ed97857ec0c32cf4633ed11e4b613e7534cfc261a90b4f7e21": {
      "address": "0x231B1bEA0154F5c3fB600a0C3bd0d053AcD42472",
      "txHash": "0xdb123d67b641e8c0bd62cfcd41f6116d4ba351f18f05f42d0c5df0d1a9646afd",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "vrfCoordinator",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:101"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "50",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "100",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "150",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "200",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "250",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "300",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "350",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "450",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3519_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "500",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "551",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_coordinator",
            "offset": 0,
            "slot": "600",
            "type": "t_contract(VRFCoordinatorV2Interface)88",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:14"
          },
          {
            "label": "_keyHash",
            "offset": 0,
            "slot": "601",
            "type": "t_bytes32",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:16"
          },
          {
            "label": "_subscriptionId",
            "offset": 0,
            "slot": "602",
            "type": "t_uint64",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:17"
          },
          {
            "label": "_confirmations",
            "offset": 8,
            "slot": "602",
            "type": "t_uint16",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:50"
          },
          {
            "label": "_pending",
            "offset": 0,
            "slot": "649",
            "type": "t_mapping(t_address,t_struct(PendingMint)3859_storage)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:36"
          },
          {
            "label": "_requestIdToAddress",
            "offset": 0,
            "slot": "650",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:37"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "651",
            "type": "t_struct(Counter)2857_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:39"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "652",
            "type": "t_struct(AddressSet)3519_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:41"
          },
          {
            "label": "percent5",
            "offset": 0,
            "slot": "654",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:43"
          },
          {
            "label": "percent10",
            "offset": 0,
            "slot": "656",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:44"
          },
          {
            "label": "percent15",
            "offset": 0,
            "slot": "658",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:45"
          },
          {
            "label": "percent20",
            "offset": 0,
            "slot": "660",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:46"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "662",
            "type": "t_contract(IERC20Upgradeable)1027",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:48"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "663",
            "type": "t_address",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:50"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "664",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:52"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "665",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:53"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "666",
            "type": "t_string_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1027": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)88": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingMint)3859_storage)": {
            "label": "mapping(address => struct CosmicElvesTicketUpgradeable.PendingMint)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3519_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3519_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3218_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2857_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PendingMint)3859_storage": {
            "label": "struct CosmicElvesTicketUpgradeable.PendingMint",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "words",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3218_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3676_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3218_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9b937e49f447d51c0fad897ab062741f1d65f7909c7dc5e01c5a0e85aa602130": {
      "address": "0xcEDDCbd7230172622dabc955259034c7eF209227",
      "txHash": "0x5d8ba7c4b25a77b19281933fee0e137bfb0cb9f6a1a42c290a3d27624f63e45f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "vrfCoordinator",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:101"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "50",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "100",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "150",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "200",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "250",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "300",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "350",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "450",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "500",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "551",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_coordinator",
            "offset": 0,
            "slot": "600",
            "type": "t_contract(VRFCoordinatorV2Interface)88",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:14"
          },
          {
            "label": "_keyHash",
            "offset": 0,
            "slot": "601",
            "type": "t_bytes32",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:16"
          },
          {
            "label": "_subscriptionId",
            "offset": 0,
            "slot": "602",
            "type": "t_uint64",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:17"
          },
          {
            "label": "_confirmations",
            "offset": 8,
            "slot": "602",
            "type": "t_uint16",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:50"
          },
          {
            "label": "_pending",
            "offset": 0,
            "slot": "649",
            "type": "t_mapping(t_address,t_struct(PendingMint)12758_storage)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:36"
          },
          {
            "label": "_requestIdToAddress",
            "offset": 0,
            "slot": "650",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:37"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "651",
            "type": "t_struct(Counter)5702_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:39"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "652",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:41"
          },
          {
            "label": "percent5",
            "offset": 0,
            "slot": "654",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:43"
          },
          {
            "label": "percent10",
            "offset": 0,
            "slot": "656",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:44"
          },
          {
            "label": "percent15",
            "offset": 0,
            "slot": "658",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:45"
          },
          {
            "label": "percent20",
            "offset": 0,
            "slot": "660",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:46"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "662",
            "type": "t_contract(IERC20Upgradeable)3252",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:48"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "663",
            "type": "t_address",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:50"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "664",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:52"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "665",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:53"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "666",
            "type": "t_string_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)3252": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)88": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingMint)12758_storage)": {
            "label": "mapping(address => struct CosmicElvesTicketUpgradeable.PendingMint)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)5702_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PendingMint)12758_storage": {
            "label": "struct CosmicElvesTicketUpgradeable.PendingMint",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "words",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cea15588170686542647bd4e34f5b1e69061663ac07cd102d7bd4ff6ad7b1c06": {
      "address": "0x1C89b5C7aC0B571aA35d7Eed50DF11b2aD4c63d5",
      "txHash": "0x28045464874115dde1ce85fa99feb80761c664b23035d68ed5539ea4f2489741",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)5702_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_totalBurned",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "ERC20BurnableUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\extensions\\ERC20BurnableUpgradeable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\extensions\\ERC20BurnableUpgradeable.sol:59"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "MAGIC",
            "offset": 0,
            "slot": "453",
            "type": "t_address",
            "contract": "lMagicUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\lMagicUpgradeable.sol:24"
          },
          {
            "label": "GENESIS_TIMESTAMP",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "lMagicUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\lMagicUpgradeable.sol:26"
          },
          {
            "label": "OMEGA_TIMESTAMP",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "lMagicUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\lMagicUpgradeable.sol:27"
          },
          {
            "label": "_totalOf",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "lMagicUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\lMagicUpgradeable.sol:29"
          },
          {
            "label": "_globalWhitelist",
            "offset": 0,
            "slot": "457",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "lMagicUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\lMagicUpgradeable.sol:31"
          },
          {
            "label": "_whitelist",
            "offset": 0,
            "slot": "459",
            "type": "t_mapping(t_address,t_struct(AddressSet)8355_storage)",
            "contract": "lMagicUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\lMagicUpgradeable.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)5702_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)5702_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3275613506e9466f443c9088e1e1a18303c7fe5f8be8b6743c3dd80c68df9360": {
      "address": "0x3C0C2675734c44a1d1D9666CaFea72F57DBb9a19",
      "txHash": "0x0381ae72788590ae5a42898dc7bb03dc70dc74f64fbfff9e107300171694f9dc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:53"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:24"
          },
          {
            "label": "_store",
            "offset": 0,
            "slot": "603",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:29"
          },
          {
            "label": "_textStore",
            "offset": 0,
            "slot": "604",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "162d7b1043c747750d6a7b24a4a51a96dfcd1ca536dd8ce814f3a53591dcd8ff": {
      "address": "0x0b7700115b35817d0695A80e690C685b237208Eb",
      "txHash": "0xdbcbcd854e910f6f8aafc17c340c9deffef6230a0104bc2c04725f8931e66536",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:57"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:24"
          },
          {
            "label": "_numericAttributes",
            "offset": 0,
            "slot": "603",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:37"
          },
          {
            "label": "_store",
            "offset": 0,
            "slot": "604",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:42"
          },
          {
            "label": "_textStore",
            "offset": 0,
            "slot": "605",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ff712fe558513d6e35d3f0c2146665ba639a42f48fe9e591606999e2ee27e773": {
      "address": "0x8F41c6BEE54C2545a73C6E7F588b3b58f9F5Da02",
      "txHash": "0x732d2f3cb26077f408b12b332c899d58acff01fe94c962c1c3264344876ded02",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:53"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3278_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)3435_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)3278_storage",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:27"
          },
          {
            "label": "_store",
            "offset": 0,
            "slot": "603",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:32"
          },
          {
            "label": "_textStore",
            "offset": 0,
            "slot": "604",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3278_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3278_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2977_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2977_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3435_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2977_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c5dc7d67e470692f8c5013f817c1500a834bbeeef70f634dd472dd43b4a0f87d": {
      "address": "0xbA28025092D3F361ecBCDBbCBc6D3C2da806D5De",
      "txHash": "0xcb84fcde8a6347e396878340125e9cf873149605fe6dfc86bbc90c5ca6239533",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:53"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3278_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)3435_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)3278_storage",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:27"
          },
          {
            "label": "_store",
            "offset": 0,
            "slot": "603",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:32"
          },
          {
            "label": "_textStore",
            "offset": 0,
            "slot": "604",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3278_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3278_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2977_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2977_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3435_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2977_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "accfbef15052bd7652423d7947717fecb39c8ed0b019e4c9674c853ea3f64165": {
      "address": "0x4de121B6a32DFE390248430AF695E71Eab525E81",
      "txHash": "0x9a6a8ed64a0c854888a0d49d365d379afdfbe31c39f863a1987f60bb767ab97d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:57"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:27"
          },
          {
            "label": "_store",
            "offset": 0,
            "slot": "603",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:32"
          },
          {
            "label": "_textStore",
            "offset": 0,
            "slot": "604",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "00029a8b66c90cbe187afb77b1f917baa00ea12aaef76d5bc070c34b3398510e": {
      "address": "0x8727f390087cAbaFeCe3C51d8Beb5A92aBDE92A6",
      "txHash": "0xd0129ad9a183f2dc763807396659b17076cb07a297dda371134c50abada352ac",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_training_status",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(TrainingStatus)2248_storage)))",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:67"
          },
          {
            "label": "_data",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_struct(ParticipantData)2199_storage)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:70"
          },
          {
            "label": "_dataKeys",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(AddressSet)1781_storage",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:72"
          },
          {
            "label": "_config",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_struct(StakingConfig)2233_storage)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:74"
          },
          {
            "label": "_configKeys",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(AddressSet)1781_storage",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:76"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICosmicAttributeStorageUpgradeable)2149": {
            "label": "contract ICosmicAttributeStorageUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)768": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(TrainingStatus)2248_storage)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingStatus)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(TrainingStatus)2248_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ParticipantData)2199_storage)": {
            "label": "mapping(address => struct ProfessionStakingUpgradeable.ParticipantData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StakingConfig)2233_storage)": {
            "label": "mapping(address => struct ProfessionStakingUpgradeable.StakingConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFT)2188_storage)": {
            "label": "mapping(uint256 => struct ProfessionStakingUpgradeable.NFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TrainingLevelConfig)2209_storage)": {
            "label": "mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingLevelConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TrainingStatus)2248_storage)": {
            "label": "mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)1781_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1480_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Attribute)2204_storage": {
            "label": "struct ProfessionStakingUpgradeable.Attribute",
            "members": [
              {
                "label": "treeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "skillId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(NFT)2188_storage": {
            "label": "struct ProfessionStakingUpgradeable.NFT",
            "members": [
              {
                "label": "_address",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ParticipantData)2199_storage": {
            "label": "struct ProfessionStakingUpgradeable.ParticipantData",
            "members": [
              {
                "label": "nftIds",
                "type": "t_struct(UintSet)1938_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nfts",
                "type": "t_mapping(t_uint256,t_struct(NFT)2188_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)1480_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingConfig)2233_storage": {
            "label": "struct ProfessionStakingUpgradeable.StakingConfig",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxPointsPerSkill",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "treeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "skillIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardToken",
                "type": "t_contract(IERC20Upgradeable)768",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "trainingLevelConfig",
                "type": "t_mapping(t_uint256,t_struct(TrainingLevelConfig)2209_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "stakingToken",
                "type": "t_contract(ICosmicAttributeStorageUpgradeable)2149",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "stakingEnabledAttribute",
                "type": "t_struct(Attribute)2204_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(TrainingLevelConfig)2209_storage": {
            "label": "struct ProfessionStakingUpgradeable.TrainingLevelConfig",
            "members": [
              {
                "label": "cost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TrainingStatus)2248_storage": {
            "label": "struct ProfessionStakingUpgradeable.TrainingStatus",
            "members": [
              {
                "label": "_address",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "treeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "skillId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "completeAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(UintSet)1938_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1480_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0d02487039c2b54a67ba2830c9d806d27e5d73835bfcb2ba88c07a36c71dff5f": {
      "address": "0xBa32A774e918bEAB5878cC94e37083AFc1DE6FA0",
      "txHash": "0x1679a267dc307c932e9e90ce1505fa2902cb186b882481a0631961c7fe4ecb6f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_training_status",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(TrainingStatus)2248_storage)))",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:67"
          },
          {
            "label": "_data",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_struct(ParticipantData)2199_storage)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:70"
          },
          {
            "label": "_dataKeys",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(AddressSet)1781_storage",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:72"
          },
          {
            "label": "_config",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_struct(StakingConfig)2233_storage)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:74"
          },
          {
            "label": "_configKeys",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(AddressSet)1781_storage",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:76"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICosmicAttributeStorageUpgradeable)2149": {
            "label": "contract ICosmicAttributeStorageUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)768": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(TrainingStatus)2248_storage)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingStatus)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(TrainingStatus)2248_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ParticipantData)2199_storage)": {
            "label": "mapping(address => struct ProfessionStakingUpgradeable.ParticipantData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StakingConfig)2233_storage)": {
            "label": "mapping(address => struct ProfessionStakingUpgradeable.StakingConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFT)2188_storage)": {
            "label": "mapping(uint256 => struct ProfessionStakingUpgradeable.NFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TrainingLevelConfig)2209_storage)": {
            "label": "mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingLevelConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TrainingStatus)2248_storage)": {
            "label": "mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)1781_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1480_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Attribute)2204_storage": {
            "label": "struct ProfessionStakingUpgradeable.Attribute",
            "members": [
              {
                "label": "treeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "skillId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(NFT)2188_storage": {
            "label": "struct ProfessionStakingUpgradeable.NFT",
            "members": [
              {
                "label": "_address",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ParticipantData)2199_storage": {
            "label": "struct ProfessionStakingUpgradeable.ParticipantData",
            "members": [
              {
                "label": "nftIds",
                "type": "t_struct(UintSet)1938_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nfts",
                "type": "t_mapping(t_uint256,t_struct(NFT)2188_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)1480_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingConfig)2233_storage": {
            "label": "struct ProfessionStakingUpgradeable.StakingConfig",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxPointsPerSkill",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "treeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "skillIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardToken",
                "type": "t_contract(IERC20Upgradeable)768",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "trainingLevelConfig",
                "type": "t_mapping(t_uint256,t_struct(TrainingLevelConfig)2209_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "stakingToken",
                "type": "t_contract(ICosmicAttributeStorageUpgradeable)2149",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "stakingEnabledAttribute",
                "type": "t_struct(Attribute)2204_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(TrainingLevelConfig)2209_storage": {
            "label": "struct ProfessionStakingUpgradeable.TrainingLevelConfig",
            "members": [
              {
                "label": "cost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TrainingStatus)2248_storage": {
            "label": "struct ProfessionStakingUpgradeable.TrainingStatus",
            "members": [
              {
                "label": "_address",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "treeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "skillId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "completeAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(UintSet)1938_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1480_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f72bf3b6a97e3d3c631c218b860e87052ab2c6153a7596b390c01d5e4e6da7bd": {
      "address": "0x53E55BB76918f06855d813E9FD9E1eF8808B79Fb",
      "txHash": "0x1e67696d7a032525c04c239d9a85f9d099d7025a487e934872481fa1420b23aa",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_training_status",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(TrainingStatus)17387_storage)))",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:67"
          },
          {
            "label": "_data",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_struct(ParticipantData)17338_storage)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:70"
          },
          {
            "label": "_dataKeys",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:72"
          },
          {
            "label": "_config",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_struct(StakingConfig)17372_storage)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:74"
          },
          {
            "label": "_configKeys",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:76"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICosmicAttributeStorageUpgradeable)16814": {
            "label": "contract ICosmicAttributeStorageUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)3252": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(TrainingStatus)17387_storage)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingStatus)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(TrainingStatus)17387_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ParticipantData)17338_storage)": {
            "label": "mapping(address => struct ProfessionStakingUpgradeable.ParticipantData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StakingConfig)17372_storage)": {
            "label": "mapping(address => struct ProfessionStakingUpgradeable.StakingConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFT)17327_storage)": {
            "label": "mapping(uint256 => struct ProfessionStakingUpgradeable.NFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TrainingLevelConfig)17348_storage)": {
            "label": "mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingLevelConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TrainingStatus)17387_storage)": {
            "label": "mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Attribute)17343_storage": {
            "label": "struct ProfessionStakingUpgradeable.Attribute",
            "members": [
              {
                "label": "treeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "skillId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(NFT)17327_storage": {
            "label": "struct ProfessionStakingUpgradeable.NFT",
            "members": [
              {
                "label": "_address",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ParticipantData)17338_storage": {
            "label": "struct ProfessionStakingUpgradeable.ParticipantData",
            "members": [
              {
                "label": "nftIds",
                "type": "t_struct(UintSet)8512_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nfts",
                "type": "t_mapping(t_uint256,t_struct(NFT)17327_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingConfig)17372_storage": {
            "label": "struct ProfessionStakingUpgradeable.StakingConfig",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxPointsPerSkill",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "treeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "skillIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardToken",
                "type": "t_contract(IERC20Upgradeable)3252",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "trainingLevelConfig",
                "type": "t_mapping(t_uint256,t_struct(TrainingLevelConfig)17348_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "stakingToken",
                "type": "t_contract(ICosmicAttributeStorageUpgradeable)16814",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "stakingEnabledAttribute",
                "type": "t_struct(Attribute)17343_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(TrainingLevelConfig)17348_storage": {
            "label": "struct ProfessionStakingUpgradeable.TrainingLevelConfig",
            "members": [
              {
                "label": "cost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TrainingStatus)17387_storage": {
            "label": "struct ProfessionStakingUpgradeable.TrainingStatus",
            "members": [
              {
                "label": "_address",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "treeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "skillId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "completeAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f8d07f0070031ba7724b95239c7c85f0dd74d9e846a56c5b8290d1685146f995": {
      "address": "0x13CE9406e91bf0C1c88a970cc885A635Bf3d12C5",
      "txHash": "0xbd6efeeb34e250f7b1f7428407a27da0cb48e205abb602465c311d5acae3aebf",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_training_status",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(TrainingStatus)17387_storage)))",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:67"
          },
          {
            "label": "_data",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_struct(ParticipantData)17338_storage)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:70"
          },
          {
            "label": "_dataKeys",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:72"
          },
          {
            "label": "_config",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_struct(StakingConfig)17372_storage)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:74"
          },
          {
            "label": "_configKeys",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:76"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ProfessionStakingUpgradeable",
            "src": "contracts\\upgradeable\\npc\\ProfessionStakingUpgradeable.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICosmicAttributeStorageUpgradeable)16814": {
            "label": "contract ICosmicAttributeStorageUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)3252": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(TrainingStatus)17387_storage)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingStatus)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(TrainingStatus)17387_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ParticipantData)17338_storage)": {
            "label": "mapping(address => struct ProfessionStakingUpgradeable.ParticipantData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StakingConfig)17372_storage)": {
            "label": "mapping(address => struct ProfessionStakingUpgradeable.StakingConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFT)17327_storage)": {
            "label": "mapping(uint256 => struct ProfessionStakingUpgradeable.NFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TrainingLevelConfig)17348_storage)": {
            "label": "mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingLevelConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TrainingStatus)17387_storage)": {
            "label": "mapping(uint256 => struct ProfessionStakingUpgradeable.TrainingStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Attribute)17343_storage": {
            "label": "struct ProfessionStakingUpgradeable.Attribute",
            "members": [
              {
                "label": "treeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "skillId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(NFT)17327_storage": {
            "label": "struct ProfessionStakingUpgradeable.NFT",
            "members": [
              {
                "label": "_address",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ParticipantData)17338_storage": {
            "label": "struct ProfessionStakingUpgradeable.ParticipantData",
            "members": [
              {
                "label": "nftIds",
                "type": "t_struct(UintSet)8512_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nfts",
                "type": "t_mapping(t_uint256,t_struct(NFT)17327_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingConfig)17372_storage": {
            "label": "struct ProfessionStakingUpgradeable.StakingConfig",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxPointsPerSkill",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "treeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "skillIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardToken",
                "type": "t_contract(IERC20Upgradeable)3252",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "trainingLevelConfig",
                "type": "t_mapping(t_uint256,t_struct(TrainingLevelConfig)17348_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "stakingToken",
                "type": "t_contract(ICosmicAttributeStorageUpgradeable)16814",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "stakingEnabledAttribute",
                "type": "t_struct(Attribute)17343_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(TrainingLevelConfig)17348_storage": {
            "label": "struct ProfessionStakingUpgradeable.TrainingLevelConfig",
            "members": [
              {
                "label": "cost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TrainingStatus)17387_storage": {
            "label": "struct ProfessionStakingUpgradeable.TrainingStatus",
            "members": [
              {
                "label": "_address",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "treeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "skillId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "completeAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e6a7a5ddb49bb378d8b2a2b00324efe0391d863546e54f50e658c133347f3426": {
      "address": "0x9059c56612Dd459f2bF61c4a3526A6c23b4DE005",
      "txHash": "0x9be6c44c9b4710bc5ea5d7c9e9bd4010a4c9ac697476e38fb168afda4058abc1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_saleIdCounter",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(Counter)5702_storage",
            "contract": "MarketCounterUpgradable",
            "src": "contracts\\marketplace\\mixins\\MarketCounterUpgradable.sol:9"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketCounterUpgradable",
            "src": "contracts\\marketplace\\mixins\\MarketCounterUpgradable.sol:17"
          },
          {
            "label": "contractAddressToBidToken",
            "offset": 0,
            "slot": "1252",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MarketContractWhitelistUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketContractWhitelistUpgradeable.sol:13"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1253",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketContractWhitelistUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketContractWhitelistUpgradeable.sol:43"
          },
          {
            "label": "_maxRoyaltyBps",
            "offset": 0,
            "slot": "2253",
            "type": "t_uint256",
            "contract": "MarketRoyaltyUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketRoyaltyUpgradeable.sol:18"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "2254",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(RoyaltyInfo)11371_storage))",
            "contract": "MarketRoyaltyUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketRoyaltyUpgradeable.sol:19"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "2255",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketRoyaltyUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketRoyaltyUpgradeable.sol:63"
          },
          {
            "label": "_marketFeeBps",
            "offset": 0,
            "slot": "3255",
            "type": "t_uint256",
            "contract": "MarketFeeUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketFeeUpgradeable.sol:13"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "3256",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketFeeUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketFeeUpgradeable.sol:41"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "4256",
            "type": "t_address",
            "contract": "TreasuryNode",
            "src": "contracts\\marketplace\\mixins\\TreasuryNode.sol:10"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4257",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "TreasuryNode",
            "src": "contracts\\marketplace\\mixins\\TreasuryNode.sol:21"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "5257",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketFundDistributorUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketFundDistributorUpgradeable.sol:45"
          },
          {
            "label": "_nexBidPercentBps",
            "offset": 0,
            "slot": "6257",
            "type": "t_uint256",
            "contract": "AuctionConfigUpgradeable",
            "src": "contracts\\marketplace\\mixins\\AuctionConfigUpgradeable.sol:15"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "6258",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "AuctionConfigUpgradeable",
            "src": "contracts\\marketplace\\mixins\\AuctionConfigUpgradeable.sol:47"
          },
          {
            "label": "saleIdToSale",
            "offset": 0,
            "slot": "7258",
            "type": "t_mapping(t_uint256,t_struct(Sale)9676_storage)",
            "contract": "MarketCoreUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketCoreUpgradeable.sol:64"
          },
          {
            "label": "_activeSaleIds",
            "offset": 0,
            "slot": "7259",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "MarketCoreUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketCoreUpgradeable.sol:66"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "7261",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketCoreUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketCoreUpgradeable.sol:425"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]",
            "numberOfBytes": "32000"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(SaleType)9642": {
            "label": "enum MarketCoreUpgradeable.SaleType",
            "members": [
              "AUCTION",
              "FIXED",
              "OFFER"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TokenType)9645": {
            "label": "enum MarketCoreUpgradeable.TokenType",
            "members": [
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(RoyaltyInfo)11371_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MarketRoyaltyUpgradeable.RoyaltyInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)11371_storage)": {
            "label": "mapping(uint256 => struct MarketRoyaltyUpgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Sale)9676_storage)": {
            "label": "mapping(uint256 => struct MarketCoreUpgradeable.Sale)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)5702_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)11371_storage": {
            "label": "struct MarketRoyaltyUpgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Sale)9676_storage": {
            "label": "struct MarketCoreUpgradeable.Sale",
            "members": [
              {
                "label": "saleType",
                "type": "t_enum(SaleType)9642",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenType",
                "type": "t_enum(TokenType)9645",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "bidToken",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "bidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4b38a7043ae138e05437296ae181c1580eb405d98b9e4caf99a3196fdb316083": {
      "address": "0x8B0487e94fB17f4D72f97d6cDFD04FD9dD4781Fd",
      "txHash": "0x6b0a7109289fd61027f1464fe489c7d8b036e2a723a257526e2789fc626a0f92",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "GOV_TOKEN",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20ExtendedUpgradeable)1610",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:54"
          },
          {
            "label": "DEV_FUND_ADDRESS",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:56"
          },
          {
            "label": "FEE_SHARE_FUND_ADDRESS",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:58"
          },
          {
            "label": "MARKETING_FUND_ADDRESS",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:60"
          },
          {
            "label": "FOUNDERS_FUND_ADDRESS",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:62"
          },
          {
            "label": "REWARD_PER_SECOND",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:64"
          },
          {
            "label": "USER_FEE_STAGES",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:66"
          },
          {
            "label": "DEV_FEE_STAGES",
            "offset": 0,
            "slot": "208",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:67"
          },
          {
            "label": "USER_DEP_FEE",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:68"
          },
          {
            "label": "DEV_DEP_FEE",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:69"
          },
          {
            "label": "START_TIME",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:72"
          },
          {
            "label": "TOTAL_ALLOCATION_POINTS",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:74"
          },
          {
            "label": "PERCENT_FOR_DEV",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:76"
          },
          {
            "label": "PERCENT_FOR_FEE_SHARE",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:77"
          },
          {
            "label": "PERCENT_FOR_MARKETING",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:78"
          },
          {
            "label": "PERCENT_FOR_FOUNDERS",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:79"
          },
          {
            "label": "poolInfo",
            "offset": 0,
            "slot": "217",
            "type": "t_array(t_struct(PoolInfo)1662_storage)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:82"
          },
          {
            "label": "poolId",
            "offset": 0,
            "slot": "218",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:83"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "219",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1652_storage))",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:84"
          },
          {
            "label": "poolExistence",
            "offset": 0,
            "slot": "220",
            "type": "t_mapping(t_contract(IERC20ExtendedUpgradeable)1610,t_bool)",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(PoolInfo)1662_storage)dyn_storage": {
            "label": "struct SimpleMasterInvestor.PoolInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20ExtendedUpgradeable)1610": {
            "label": "contract IERC20ExtendedUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)1652_storage)": {
            "label": "mapping(address => struct SimpleMasterInvestor.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20ExtendedUpgradeable)1610,t_bool)": {
            "label": "mapping(contract IERC20ExtendedUpgradeable => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1652_storage))": {
            "label": "mapping(uint256 => mapping(address => struct SimpleMasterInvestor.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)1662_storage": {
            "label": "struct SimpleMasterInvestor.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IERC20ExtendedUpgradeable)1610",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRewardTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accGovTokenPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)1652_storage": {
            "label": "struct SimpleMasterInvestor.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardDebtAtTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastWithdrawTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "firstDepositTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "timeDelta",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastDepositTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d89807eaf195907649d5693671b8c5ec51ef67d0b4155fb50a8160ef83818481": {
      "address": "0x9f238c9200B7484cDCDfA15e6359AC6AD9ff891f",
      "txHash": "0xc596a27d8eb6087787573b2e8979bf66580c25344b0f9db6644269b3ae472747",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "GOV_TOKEN",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20ExtendedUpgradeable)1610",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:54"
          },
          {
            "label": "DEV_FUND_ADDRESS",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:56"
          },
          {
            "label": "FEE_SHARE_FUND_ADDRESS",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:58"
          },
          {
            "label": "MARKETING_FUND_ADDRESS",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:60"
          },
          {
            "label": "FOUNDERS_FUND_ADDRESS",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:62"
          },
          {
            "label": "REWARD_PER_SECOND",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:64"
          },
          {
            "label": "USER_FEE_STAGES",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:66"
          },
          {
            "label": "DEV_FEE_STAGES",
            "offset": 0,
            "slot": "208",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:67"
          },
          {
            "label": "USER_DEP_FEE",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:68"
          },
          {
            "label": "DEV_DEP_FEE",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:69"
          },
          {
            "label": "START_TIME",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:72"
          },
          {
            "label": "TOTAL_ALLOCATION_POINTS",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:74"
          },
          {
            "label": "PERCENT_FOR_DEV",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:76"
          },
          {
            "label": "PERCENT_FOR_FEE_SHARE",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:77"
          },
          {
            "label": "PERCENT_FOR_MARKETING",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:78"
          },
          {
            "label": "PERCENT_FOR_FOUNDERS",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:79"
          },
          {
            "label": "poolInfo",
            "offset": 0,
            "slot": "217",
            "type": "t_array(t_struct(PoolInfo)1662_storage)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:82"
          },
          {
            "label": "poolId",
            "offset": 0,
            "slot": "218",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:83"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "219",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1652_storage))",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:84"
          },
          {
            "label": "poolExistence",
            "offset": 0,
            "slot": "220",
            "type": "t_mapping(t_contract(IERC20ExtendedUpgradeable)1610,t_bool)",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:85"
          },
          {
            "label": "FINISH_BONUS_AT_TIME",
            "offset": 0,
            "slot": "221",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:88"
          },
          {
            "label": "HALVING_AT_TIMES",
            "offset": 0,
            "slot": "222",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:89"
          },
          {
            "label": "REWARD_MULTIPLIERS",
            "offset": 0,
            "slot": "223",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:90"
          },
          {
            "label": "PERCENT_LOCK_BONUS_REWARD",
            "offset": 0,
            "slot": "224",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(PoolInfo)1662_storage)dyn_storage": {
            "label": "struct SimpleMasterInvestor.PoolInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20ExtendedUpgradeable)1610": {
            "label": "contract IERC20ExtendedUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)1652_storage)": {
            "label": "mapping(address => struct SimpleMasterInvestor.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20ExtendedUpgradeable)1610,t_bool)": {
            "label": "mapping(contract IERC20ExtendedUpgradeable => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1652_storage))": {
            "label": "mapping(uint256 => mapping(address => struct SimpleMasterInvestor.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)1662_storage": {
            "label": "struct SimpleMasterInvestor.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IERC20ExtendedUpgradeable)1610",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRewardTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accGovTokenPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)1652_storage": {
            "label": "struct SimpleMasterInvestor.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardDebtAtTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastWithdrawTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "firstDepositTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "timeDelta",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastDepositTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a3ff59e013ae1aee1f06d0451a53ba940efa1ef124ad76d588aae87d3a2532a3": {
      "address": "0xE2cd6b92E230500283974E43626dac0Fa047d167",
      "txHash": "0x5620868566f841311d06bb7ce0ffe9da3a6b65ac40bd11b874604bc96a3514e2",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "GOV_TOKEN",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20ExtendedUpgradeable)12054",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:54"
          },
          {
            "label": "DEV_FUND_ADDRESS",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:56"
          },
          {
            "label": "FEE_SHARE_FUND_ADDRESS",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:58"
          },
          {
            "label": "MARKETING_FUND_ADDRESS",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:60"
          },
          {
            "label": "FOUNDERS_FUND_ADDRESS",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:62"
          },
          {
            "label": "REWARD_PER_SECOND",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:64"
          },
          {
            "label": "USER_FEE_STAGES",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:66"
          },
          {
            "label": "DEV_FEE_STAGES",
            "offset": 0,
            "slot": "208",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:67"
          },
          {
            "label": "USER_DEP_FEE",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:68"
          },
          {
            "label": "DEV_DEP_FEE",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:69"
          },
          {
            "label": "START_TIME",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:72"
          },
          {
            "label": "TOTAL_ALLOCATION_POINTS",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:74"
          },
          {
            "label": "PERCENT_FOR_DEV",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:76"
          },
          {
            "label": "PERCENT_FOR_FEE_SHARE",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:77"
          },
          {
            "label": "PERCENT_FOR_MARKETING",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:78"
          },
          {
            "label": "PERCENT_FOR_FOUNDERS",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:79"
          },
          {
            "label": "poolInfo",
            "offset": 0,
            "slot": "217",
            "type": "t_array(t_struct(PoolInfo)20525_storage)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:82"
          },
          {
            "label": "poolId",
            "offset": 0,
            "slot": "218",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:83"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "219",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)20515_storage))",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:84"
          },
          {
            "label": "poolExistence",
            "offset": 0,
            "slot": "220",
            "type": "t_mapping(t_contract(IERC20ExtendedUpgradeable)12054,t_bool)",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:85"
          },
          {
            "label": "FINISH_BONUS_AT_TIME",
            "offset": 0,
            "slot": "221",
            "type": "t_uint256",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:88"
          },
          {
            "label": "HALVING_AT_TIMES",
            "offset": 0,
            "slot": "222",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:89"
          },
          {
            "label": "REWARD_MULTIPLIERS",
            "offset": 0,
            "slot": "223",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:90"
          },
          {
            "label": "PERCENT_LOCK_BONUS_REWARD",
            "offset": 0,
            "slot": "224",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SimpleMasterInvestor",
            "src": "contracts\\upgradeable\\npc\\SimpleMasterInvestor.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(PoolInfo)20525_storage)dyn_storage": {
            "label": "struct SimpleMasterInvestor.PoolInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20ExtendedUpgradeable)12054": {
            "label": "contract IERC20ExtendedUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)20515_storage)": {
            "label": "mapping(address => struct SimpleMasterInvestor.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20ExtendedUpgradeable)12054,t_bool)": {
            "label": "mapping(contract IERC20ExtendedUpgradeable => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)20515_storage))": {
            "label": "mapping(uint256 => mapping(address => struct SimpleMasterInvestor.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)20525_storage": {
            "label": "struct SimpleMasterInvestor.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IERC20ExtendedUpgradeable)12054",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRewardTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accGovTokenPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)20515_storage": {
            "label": "struct SimpleMasterInvestor.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardDebtAtTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastWithdrawTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "firstDepositTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "timeDelta",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastDepositTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "48def1bbea18589af1639a8e02e9901dcb560ea67ff3ea93d91f18f444ac4e57": {
      "address": "0x600cb43B0FC6b5570501842CB11A0F41787bCFc6",
      "txHash": "0xd488124a4cec8f6777174b8bba1008a878cb9d366fb1dd63c978de6ea66d79a8",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "vrfCoordinator",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:101"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "50",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "100",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "150",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "200",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "250",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "300",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "350",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "450",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "500",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "551",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_coordinator",
            "offset": 0,
            "slot": "600",
            "type": "t_contract(VRFCoordinatorV2Interface)88",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:14"
          },
          {
            "label": "_keyHash",
            "offset": 0,
            "slot": "601",
            "type": "t_bytes32",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:16"
          },
          {
            "label": "_subscriptionId",
            "offset": 0,
            "slot": "602",
            "type": "t_uint64",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:17"
          },
          {
            "label": "_confirmations",
            "offset": 8,
            "slot": "602",
            "type": "t_uint16",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:50"
          },
          {
            "label": "_pending",
            "offset": 0,
            "slot": "649",
            "type": "t_mapping(t_address,t_struct(PendingMint)12772_storage)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:36"
          },
          {
            "label": "_requestIdToAddress",
            "offset": 0,
            "slot": "650",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:37"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "651",
            "type": "t_struct(Counter)5702_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:39"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "652",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:41"
          },
          {
            "label": "percent5",
            "offset": 0,
            "slot": "654",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:43"
          },
          {
            "label": "percent10",
            "offset": 0,
            "slot": "656",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:44"
          },
          {
            "label": "percent15",
            "offset": 0,
            "slot": "658",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:45"
          },
          {
            "label": "percent20",
            "offset": 0,
            "slot": "660",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:46"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "662",
            "type": "t_contract(IERC20Upgradeable)3252",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:48"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "663",
            "type": "t_address",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:50"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "664",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:52"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "665",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:53"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "666",
            "type": "t_string_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)3252": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)88": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingMint)12772_storage)": {
            "label": "mapping(address => struct CosmicElvesTicketUpgradeable.PendingMint)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)5702_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PendingMint)12772_storage": {
            "label": "struct CosmicElvesTicketUpgradeable.PendingMint",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "words",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3d95890b33510f797c73a4ca714f5334af0263e6a45e49ed5061e5cb91cb179b": {
      "address": "0x8a2aB453076E82D445097c0913172E9e6bF21B36",
      "txHash": "0xd91f67e74e99191c088f16154b5223b9d0122338623402ec0ea9cb7545f038d5",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:57"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "FramedWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\FramedWizardsUpgradeable.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ab187e305032aec14f1a7c68577e072e2381421820195cb0286f6c1cc45d5471": {
      "address": "0x5C865B17536DB9FF5a6488B56ed00Ac9d1902c39",
      "txHash": "0x6644d7bc3da98ecea6f72f16ff4116c03854cb5f52e5c4019979098699e39242",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:57"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:24"
          },
          {
            "label": "_numericAttributes",
            "offset": 0,
            "slot": "603",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:37"
          },
          {
            "label": "_store",
            "offset": 0,
            "slot": "604",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:42"
          },
          {
            "label": "_textStore",
            "offset": 0,
            "slot": "605",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "contract": "CosmicIslandLandUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicIslandLandUpgradeable.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "53e1f0fcc3baada23a34a386e41ee17e686fad4e061f2f4a279ab6ec813e8aa7": {
      "address": "0x154dC10372f470860f39eB4aca8D9E935b3536f2",
      "txHash": "0xfa596b4a76657a85c774459898f90e396bac652045cb4850442c7019509ddcdd",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:57"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:27"
          },
          {
            "label": "_store",
            "offset": 0,
            "slot": "603",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:32"
          },
          {
            "label": "_textStore",
            "offset": 0,
            "slot": "604",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4b0e40b09eb471935466277a4a00ee048e7fb5463613c9620dcbb861d9d3b3a0": {
      "address": "0x8DCcf9915f15211796198A631Cf235c2F0b259D2",
      "txHash": "0x06f017f9f600d93d58cdbdc74ee21ea0516dcec36739aa87465bbfb73e50eaec",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:57"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:27"
          },
          {
            "label": "_store",
            "offset": 0,
            "slot": "603",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:32"
          },
          {
            "label": "_textStore",
            "offset": 0,
            "slot": "604",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8d99435dbc976988c9557948ba321a2757ac9d97deef4c8f4fcd0fcd87566299": {
      "address": "0x00F085dC50B9c227b5f59DE8011D436DB93DCfa3",
      "txHash": "0xc7a0cb2fedffcc5da9ee719f9e2be60710ad476f7d78e83b62115dd6af0f0843",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "BASE_TOKEN",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(ERC20Upgradeable)3174",
            "contract": "xMagicUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\xMagicUpgradeable.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ERC20Upgradeable)3174": {
            "label": "contract ERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8a7ebea422502692776cb09fa4568ec5e4c9d99eea178a2a91a322ad379f509d": {
      "address": "0x9c76a998b0BA562b0fdc1EdEC15a3Cc87DB7279A",
      "txHash": "0x8230ea41ba97d167db5222b474e881292a4cee084960634f7c80229343ac6b36",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)5702_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_totalBurned",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "ERC20BurnableUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\extensions\\ERC20BurnableUpgradeable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\extensions\\ERC20BurnableUpgradeable.sol:59"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "MAGIC",
            "offset": 0,
            "slot": "453",
            "type": "t_address",
            "contract": "lMagicUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\lMagicUpgradeable.sol:24"
          },
          {
            "label": "GENESIS_TIMESTAMP",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "lMagicUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\lMagicUpgradeable.sol:26"
          },
          {
            "label": "OMEGA_TIMESTAMP",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "lMagicUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\lMagicUpgradeable.sol:27"
          },
          {
            "label": "_totalOf",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "lMagicUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\lMagicUpgradeable.sol:29"
          },
          {
            "label": "_globalWhitelist",
            "offset": 0,
            "slot": "457",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "lMagicUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\lMagicUpgradeable.sol:31"
          },
          {
            "label": "_whitelist",
            "offset": 0,
            "slot": "459",
            "type": "t_mapping(t_address,t_struct(AddressSet)8355_storage)",
            "contract": "lMagicUpgradeable",
            "src": "contracts\\upgradeable\\ERC20\\lMagicUpgradeable.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)5702_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)5702_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "33996f492864a1e16e87728d803d4a45b30fb69ea2c178fd5216da59a3afbd70": {
      "address": "0xc64910c637Ca18Fb382D9734bC8ef48d2CB6A8f9",
      "txHash": "0x58bf04f5ba90848ef6020791d4ba7166412ab29df96dfcc3e98bd7a7d2c701f4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "vrfCoordinator",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:101"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "50",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "100",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "150",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "200",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "250",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "300",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "350",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "450",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3519_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "500",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "551",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_coordinator",
            "offset": 0,
            "slot": "600",
            "type": "t_contract(VRFCoordinatorV2Interface)88",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:14"
          },
          {
            "label": "_keyHash",
            "offset": 0,
            "slot": "601",
            "type": "t_bytes32",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:16"
          },
          {
            "label": "_subscriptionId",
            "offset": 0,
            "slot": "602",
            "type": "t_uint64",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:17"
          },
          {
            "label": "_confirmations",
            "offset": 8,
            "slot": "602",
            "type": "t_uint16",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:50"
          },
          {
            "label": "_pending",
            "offset": 0,
            "slot": "649",
            "type": "t_mapping(t_address,t_struct(PendingMint)3859_storage)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:36"
          },
          {
            "label": "_requestIdToAddress",
            "offset": 0,
            "slot": "650",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:37"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "651",
            "type": "t_struct(Counter)2857_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:39"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "652",
            "type": "t_struct(AddressSet)3519_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:41"
          },
          {
            "label": "percent5",
            "offset": 0,
            "slot": "654",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:43"
          },
          {
            "label": "percent10",
            "offset": 0,
            "slot": "656",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:44"
          },
          {
            "label": "percent15",
            "offset": 0,
            "slot": "658",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:45"
          },
          {
            "label": "percent20",
            "offset": 0,
            "slot": "660",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:46"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "662",
            "type": "t_contract(IERC20Upgradeable)1027",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:48"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "663",
            "type": "t_address",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:50"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "664",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:52"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "665",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:53"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "666",
            "type": "t_string_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1027": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)88": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingMint)3859_storage)": {
            "label": "mapping(address => struct CosmicElvesTicketUpgradeable.PendingMint)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3519_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3519_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3218_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2857_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PendingMint)3859_storage": {
            "label": "struct CosmicElvesTicketUpgradeable.PendingMint",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "words",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3218_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3676_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3218_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5432a26a54237f18ef6906beeb9ec430e067b1b6a74225d576ec09d350a224a8": {
      "address": "0x8d06c99B27598FE30B00023219bBED829769bBDd",
      "txHash": "0xa68def58017de9572bb26d382a0960c69422b20a1d67275ef2a69be341c306cf",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "vrfCoordinator",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:101"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "50",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "100",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "150",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "200",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "250",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "300",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "350",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "450",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3519_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "500",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "551",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_coordinator",
            "offset": 0,
            "slot": "600",
            "type": "t_contract(VRFCoordinatorV2Interface)88",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:14"
          },
          {
            "label": "_keyHash",
            "offset": 0,
            "slot": "601",
            "type": "t_bytes32",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:16"
          },
          {
            "label": "_subscriptionId",
            "offset": 0,
            "slot": "602",
            "type": "t_uint64",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:17"
          },
          {
            "label": "_confirmations",
            "offset": 8,
            "slot": "602",
            "type": "t_uint16",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:50"
          },
          {
            "label": "_pending",
            "offset": 0,
            "slot": "649",
            "type": "t_mapping(t_address,t_struct(PendingMint)3859_storage)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:36"
          },
          {
            "label": "_requestIdToAddress",
            "offset": 0,
            "slot": "650",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:37"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "651",
            "type": "t_struct(Counter)2857_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:39"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "652",
            "type": "t_struct(AddressSet)3519_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:41"
          },
          {
            "label": "percent5",
            "offset": 0,
            "slot": "654",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:43"
          },
          {
            "label": "percent10",
            "offset": 0,
            "slot": "656",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:44"
          },
          {
            "label": "percent15",
            "offset": 0,
            "slot": "658",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:45"
          },
          {
            "label": "percent20",
            "offset": 0,
            "slot": "660",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:46"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "662",
            "type": "t_contract(IERC20Upgradeable)1027",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:48"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "663",
            "type": "t_address",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:50"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "664",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:52"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "665",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:53"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "666",
            "type": "t_string_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1027": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)88": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingMint)3859_storage)": {
            "label": "mapping(address => struct CosmicElvesTicketUpgradeable.PendingMint)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3519_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3519_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3218_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2857_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PendingMint)3859_storage": {
            "label": "struct CosmicElvesTicketUpgradeable.PendingMint",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "words",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3218_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3676_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3218_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1470a5d79b3c07ee18a52092c6c39871e660a0399af18a003bc086b9624b5c49": {
      "address": "0xb71d77da053bBb64b6c882165059B07ad03A127c",
      "txHash": "0x9165525fbe1c4a1f9e48a921bcca8564064dc995436d5f56e8b3f9ee7c6cbdec",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "vrfCoordinator",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:101"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "50",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "100",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "150",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "200",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "250",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "300",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "350",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "450",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3519_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "500",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "551",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_coordinator",
            "offset": 0,
            "slot": "600",
            "type": "t_contract(VRFCoordinatorV2Interface)88",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:14"
          },
          {
            "label": "_keyHash",
            "offset": 0,
            "slot": "601",
            "type": "t_bytes32",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:16"
          },
          {
            "label": "_subscriptionId",
            "offset": 0,
            "slot": "602",
            "type": "t_uint64",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:17"
          },
          {
            "label": "_confirmations",
            "offset": 8,
            "slot": "602",
            "type": "t_uint16",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:50"
          },
          {
            "label": "_pending",
            "offset": 0,
            "slot": "649",
            "type": "t_mapping(t_address,t_struct(PendingMint)3859_storage)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:36"
          },
          {
            "label": "_requestIdToAddress",
            "offset": 0,
            "slot": "650",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:37"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "651",
            "type": "t_struct(Counter)2857_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:39"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "652",
            "type": "t_struct(AddressSet)3519_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:41"
          },
          {
            "label": "percent5",
            "offset": 0,
            "slot": "654",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:43"
          },
          {
            "label": "percent10",
            "offset": 0,
            "slot": "656",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:44"
          },
          {
            "label": "percent15",
            "offset": 0,
            "slot": "658",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:45"
          },
          {
            "label": "percent20",
            "offset": 0,
            "slot": "660",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:46"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "662",
            "type": "t_contract(IERC20Upgradeable)1027",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:48"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "663",
            "type": "t_address",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:50"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "664",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:52"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "665",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:53"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "666",
            "type": "t_string_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1027": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)88": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingMint)3859_storage)": {
            "label": "mapping(address => struct CosmicElvesTicketUpgradeable.PendingMint)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3519_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3519_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3218_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2857_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PendingMint)3859_storage": {
            "label": "struct CosmicElvesTicketUpgradeable.PendingMint",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "words",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3218_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3676_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3218_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "94f55010c3cc19f58647f9d89fcb2fb0217c91662ad6cdb2ccaa23b77222500f": {
      "address": "0xD9eABF59c5DdFF117fe4EC90B5431557Da5b6A3e",
      "txHash": "0xd2b42a176ba5a9f8c227fc76677b572143d05197422efb54b0646e36d6c6df16",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "vrfCoordinator",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:101"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "50",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "100",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "150",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "200",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "250",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "300",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "350",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "450",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3519_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "500",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "551",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_coordinator",
            "offset": 0,
            "slot": "600",
            "type": "t_contract(VRFCoordinatorV2Interface)88",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:14"
          },
          {
            "label": "_keyHash",
            "offset": 0,
            "slot": "601",
            "type": "t_bytes32",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:16"
          },
          {
            "label": "_subscriptionId",
            "offset": 0,
            "slot": "602",
            "type": "t_uint64",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:17"
          },
          {
            "label": "_confirmations",
            "offset": 8,
            "slot": "602",
            "type": "t_uint16",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:50"
          },
          {
            "label": "_pending",
            "offset": 0,
            "slot": "649",
            "type": "t_mapping(t_address,t_struct(PendingMint)3859_storage)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:36"
          },
          {
            "label": "_requestIdToAddress",
            "offset": 0,
            "slot": "650",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:37"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "651",
            "type": "t_struct(Counter)2857_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:39"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "652",
            "type": "t_struct(AddressSet)3519_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:41"
          },
          {
            "label": "percent5",
            "offset": 0,
            "slot": "654",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:43"
          },
          {
            "label": "percent10",
            "offset": 0,
            "slot": "656",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:44"
          },
          {
            "label": "percent15",
            "offset": 0,
            "slot": "658",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:45"
          },
          {
            "label": "percent20",
            "offset": 0,
            "slot": "660",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:46"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "662",
            "type": "t_contract(IERC20Upgradeable)1027",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:48"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "663",
            "type": "t_address",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:50"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "664",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:52"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "665",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:53"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "666",
            "type": "t_string_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1027": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)88": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingMint)3859_storage)": {
            "label": "mapping(address => struct CosmicElvesTicketUpgradeable.PendingMint)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3519_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3519_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3218_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2857_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PendingMint)3859_storage": {
            "label": "struct CosmicElvesTicketUpgradeable.PendingMint",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "words",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3218_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3676_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3218_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4673d92fecf99c9a8c39aadfe861faa79115028b022e035c1accef6bf53d6e35": {
      "address": "0x4323e36727949A1cadB6bacF7B36534f2Be92b19",
      "txHash": "0xa7fed1d4751473b536f169414ff9cd677dce959b2a94408c2687b27c684d74f3",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "vrfCoordinator",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:101"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "50",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "100",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "150",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "200",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "250",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "300",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "350",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "450",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3519_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "500",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "551",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_coordinator",
            "offset": 0,
            "slot": "600",
            "type": "t_contract(VRFCoordinatorV2Interface)88",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:14"
          },
          {
            "label": "_keyHash",
            "offset": 0,
            "slot": "601",
            "type": "t_bytes32",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:16"
          },
          {
            "label": "_subscriptionId",
            "offset": 0,
            "slot": "602",
            "type": "t_uint64",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:17"
          },
          {
            "label": "_confirmations",
            "offset": 8,
            "slot": "602",
            "type": "t_uint16",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:50"
          },
          {
            "label": "_pending",
            "offset": 0,
            "slot": "649",
            "type": "t_mapping(t_address,t_struct(PendingMint)3859_storage)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:36"
          },
          {
            "label": "_requestIdToAddress",
            "offset": 0,
            "slot": "650",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:37"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "651",
            "type": "t_struct(Counter)2857_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:39"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "652",
            "type": "t_struct(AddressSet)3519_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:41"
          },
          {
            "label": "percent5",
            "offset": 0,
            "slot": "654",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:43"
          },
          {
            "label": "percent10",
            "offset": 0,
            "slot": "656",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:44"
          },
          {
            "label": "percent15",
            "offset": 0,
            "slot": "658",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:45"
          },
          {
            "label": "percent20",
            "offset": 0,
            "slot": "660",
            "type": "t_struct(UintSet)3676_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:46"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "662",
            "type": "t_contract(IERC20Upgradeable)1027",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:48"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "663",
            "type": "t_address",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:50"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "664",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:52"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "665",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:53"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "666",
            "type": "t_string_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1027": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)88": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingMint)3859_storage)": {
            "label": "mapping(address => struct CosmicElvesTicketUpgradeable.PendingMint)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3519_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3519_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3218_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2857_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PendingMint)3859_storage": {
            "label": "struct CosmicElvesTicketUpgradeable.PendingMint",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "words",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3218_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3676_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3218_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "afbf47a2cf0c1795ee95da408f18f1d50a83c49d9d43e267c3565e58c594ab04": {
      "address": "0x1Bf72927421bbC5e67322e69CF2C685f5abCC7f9",
      "txHash": "0x93e6e9bd3a871986f7b28bdae5334df303deeca80dd59bef31228658ff73c596",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "vrfCoordinator",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:101"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts\\upgradeable\\utils\\VRFConsumerBaseV2.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "50",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "100",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "150",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "200",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "250",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "300",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "350",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "450",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "500",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "551",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_coordinator",
            "offset": 0,
            "slot": "600",
            "type": "t_contract(VRFCoordinatorV2Interface)88",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:14"
          },
          {
            "label": "_keyHash",
            "offset": 0,
            "slot": "601",
            "type": "t_bytes32",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:16"
          },
          {
            "label": "_subscriptionId",
            "offset": 0,
            "slot": "602",
            "type": "t_uint64",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:17"
          },
          {
            "label": "_confirmations",
            "offset": 8,
            "slot": "602",
            "type": "t_uint16",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ChainlinkVRFConsumerUpgradeable",
            "src": "contracts\\upgradeable\\utils\\ChainlinkVRFConsumerUpgradeable.sol:50"
          },
          {
            "label": "_pending",
            "offset": 0,
            "slot": "649",
            "type": "t_mapping(t_address,t_struct(PendingMint)12772_storage)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:36"
          },
          {
            "label": "_requestIdToAddress",
            "offset": 0,
            "slot": "650",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:37"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "651",
            "type": "t_struct(Counter)5702_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:39"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "652",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:41"
          },
          {
            "label": "percent5",
            "offset": 0,
            "slot": "654",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:43"
          },
          {
            "label": "percent10",
            "offset": 0,
            "slot": "656",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:44"
          },
          {
            "label": "percent15",
            "offset": 0,
            "slot": "658",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:45"
          },
          {
            "label": "percent20",
            "offset": 0,
            "slot": "660",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:46"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "662",
            "type": "t_contract(IERC20Upgradeable)3252",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:48"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "663",
            "type": "t_address",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:50"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "664",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:52"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "665",
            "type": "t_uint256",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:53"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "666",
            "type": "t_string_storage",
            "contract": "CosmicElvesTicketUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicElvesTicketUpgradeable.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)3252": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)88": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingMint)12772_storage)": {
            "label": "mapping(address => struct CosmicElvesTicketUpgradeable.PendingMint)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)5702_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PendingMint)12772_storage": {
            "label": "struct CosmicElvesTicketUpgradeable.PendingMint",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "words",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8dbceaedc720cbb935104bd46e336e46bcf569cfbfa0f92c3f05c99661168e35": {
      "address": "0x26E6619579570878b476A30b9e4a6E5e71EbD402",
      "txHash": "0x5c34d50b6e7ea74c220ed0cf4064217ebd4f6938dd5efdcf9b688b4739fb4cae",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_saleIdCounter",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(Counter)5702_storage",
            "contract": "MarketCounterUpgradable",
            "src": "contracts\\marketplace\\mixins\\MarketCounterUpgradable.sol:9"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketCounterUpgradable",
            "src": "contracts\\marketplace\\mixins\\MarketCounterUpgradable.sol:17"
          },
          {
            "label": "contractAddressToBidToken",
            "offset": 0,
            "slot": "1252",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MarketContractWhitelistUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketContractWhitelistUpgradeable.sol:13"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1253",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketContractWhitelistUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketContractWhitelistUpgradeable.sol:43"
          },
          {
            "label": "_maxRoyaltyBps",
            "offset": 0,
            "slot": "2253",
            "type": "t_uint256",
            "contract": "MarketRoyaltyUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketRoyaltyUpgradeable.sol:18"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "2254",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(RoyaltyInfo)11426_storage))",
            "contract": "MarketRoyaltyUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketRoyaltyUpgradeable.sol:19"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "2255",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketRoyaltyUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketRoyaltyUpgradeable.sol:63"
          },
          {
            "label": "_marketFeeBps",
            "offset": 0,
            "slot": "3255",
            "type": "t_uint256",
            "contract": "MarketFeeUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketFeeUpgradeable.sol:13"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "3256",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketFeeUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketFeeUpgradeable.sol:41"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "4256",
            "type": "t_address",
            "contract": "TreasuryNode",
            "src": "contracts\\marketplace\\mixins\\TreasuryNode.sol:10"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4257",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "TreasuryNode",
            "src": "contracts\\marketplace\\mixins\\TreasuryNode.sol:21"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "5257",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketFundDistributorUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketFundDistributorUpgradeable.sol:45"
          },
          {
            "label": "_nexBidPercentBps",
            "offset": 0,
            "slot": "6257",
            "type": "t_uint256",
            "contract": "AuctionConfigUpgradeable",
            "src": "contracts\\marketplace\\mixins\\AuctionConfigUpgradeable.sol:15"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "6258",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "AuctionConfigUpgradeable",
            "src": "contracts\\marketplace\\mixins\\AuctionConfigUpgradeable.sol:47"
          },
          {
            "label": "saleIdToSale",
            "offset": 0,
            "slot": "7258",
            "type": "t_mapping(t_uint256,t_struct(Sale)9676_storage)",
            "contract": "MarketCoreUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketCoreUpgradeable.sol:64"
          },
          {
            "label": "_activeSaleIds",
            "offset": 0,
            "slot": "7259",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "MarketCoreUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketCoreUpgradeable.sol:66"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "7261",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "MarketCoreUpgradeable",
            "src": "contracts\\marketplace\\mixins\\MarketCoreUpgradeable.sol:434"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]",
            "numberOfBytes": "32000"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(SaleType)9642": {
            "label": "enum MarketCoreUpgradeable.SaleType",
            "members": [
              "AUCTION",
              "FIXED",
              "OFFER"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TokenType)9645": {
            "label": "enum MarketCoreUpgradeable.TokenType",
            "members": [
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(RoyaltyInfo)11426_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MarketRoyaltyUpgradeable.RoyaltyInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)11426_storage)": {
            "label": "mapping(uint256 => struct MarketRoyaltyUpgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Sale)9676_storage)": {
            "label": "mapping(uint256 => struct MarketCoreUpgradeable.Sale)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)5702_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)11426_storage": {
            "label": "struct MarketRoyaltyUpgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Sale)9676_storage": {
            "label": "struct MarketCoreUpgradeable.Sale",
            "members": [
              {
                "label": "saleType",
                "type": "t_enum(SaleType)9642",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenType",
                "type": "t_enum(TokenType)9645",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "bidToken",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "bidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7b317f7396b0c5d873c6dc967107c3e01cfb36903591616516f627c9835d9ece": {
      "address": "0x0Dc28911c9c90D91BD2223160CcB2283308C91Df",
      "txHash": "0x4abee156dfd50415556d1a6d9fea6f28165d7f36ea640c1ebbbf67c2951a0cbf",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721EnumerableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721EnumerableExtendedUpgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:16"
          },
          {
            "label": "imageBaseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721URIStorageExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721URIStorageExtendedUpgradeable.sol:57"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)268_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_burned",
            "offset": 0,
            "slot": "501",
            "type": "t_struct(UintSet)8512_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "503",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721BurnableExtendedUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\extensions\\ERC721BurnableExtendedUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TokenConstants",
            "src": "contracts\\upgradeable\\utils\\TokenConstants.sol:8"
          },
          {
            "label": "_blacklist",
            "offset": 0,
            "slot": "601",
            "type": "t_struct(AddressSet)8355_storage",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:27"
          },
          {
            "label": "_store",
            "offset": 0,
            "slot": "603",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:32"
          },
          {
            "label": "_textStore",
            "offset": 0,
            "slot": "604",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "contract": "CosmicWizardsUpgradeable",
            "src": "contracts\\upgradeable\\ERC721\\CosmicWizardsUpgradeable.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)8512_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
